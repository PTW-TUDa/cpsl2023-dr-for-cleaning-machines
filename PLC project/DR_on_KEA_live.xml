<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="IndraLogic" productVersion="indralogic" creationDateTime="2022-11-22T16:07:57.4820532" />
  <contentHeader name="IndraLogic.project" modificationDateTime="2022-11-22T15:55:06.1657894">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="ST_ComBasketRotation">
        <baseType>
          <struct>
            <variable name="fBasketRotationSpeed">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Drehzahl 0 &lt;= x &lt;= 4 l/min</xhtml>
              </documentation>
            </variable>
            <variable name="diagCodeBasketRotation">
              <type>
                <derived name="IL_INLN_DIAG_CODE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Sensor-Diagnose: Temperatur</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="none" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d1a410be-9c79-4d50-a7b7-45a98dd5a482</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_TankErrorState">
        <baseType>
          <struct>
            <variable name="bErrorTankLevelLow">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorTankLevelFull">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorFreshWaterSupply">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorTankTemperatureCriticalLow">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorTankTemperatureCriticalHigh">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>96979f1c-5e51-40f5-b56d-fadc74da005b</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_PowerMeasurementUMG96RM">
        <baseType>
          <struct>
            <variable name="modeReturn">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Die genaue Konfiguration ist dem Handbuch zu Janitza UMG96RM-P (ab S.82) zu entnehmen</xhtml>
              </documentation>
            </variable>
            <variable name="value">
              <type>
                <array>
                  <dimension lower="0" upper="26" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="count">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="27" />
              </initialValue>
            </variable>
            <variable name="CurrentTotal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="RealPowerTotal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="ReactivePowerTotal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="Frequency">
              <type>
                <REAL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="none" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bd050c9d-0cc3-43d9-a449-929d2337d967</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_SetKEAProgramManual">
        <baseType>
          <struct>
            <variable name="fTankTemperatureSetPointManual">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 30...75°C</xhtml>
              </documentation>
            </variable>
            <variable name="fTankHeaterHysteresisWidthManual">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Definiert Range der Tankheizung</xhtml>
              </documentation>
            </variable>
            <variable name="fAirHeatingTemperatureSetPointManual">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 50...110°C</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitLowerWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> minimal temperature to start process</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitUpperWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximal temperature to start process</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSprayCleaningManual">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationDrippingManual">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSuctionManual">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationBlowingManual">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationConvectionDryingManual">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette	</xhtml>
              </documentation>
            </variable>
            <variable name="bProgramWithBasketRotationManual">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bProgramWithBasketRotation">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Keine Korbrotation</xhtml>
              </documentation>
            </variable>
            <variable name="sTypeWorkpiece">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fMassWorkpiece">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> mass in kg</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>faa9a5a1-00f8-4f90-9ce7-bff828719f94</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_KEALocalSetParameters">
        <baseType>
          <struct>
            <variable name="nSelectProgram">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bSetSelectedProgram">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bResetErrors">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOpenDoor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="nWorkpieces">
              <type>
                <INT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>698900de-5a74-42cc-8b14-3579abc89752</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_StoreEnergyInherentlyState">
        <baseType>
          <struct>
            <variable name="fNominalLoad">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; module's nominal load</xhtml>
              </documentation>
            </variable>
            <variable name="sMachineStateCorrelation">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; machine states in which the module can be used as inherent energy storage: oﬀ , standby , operational or working</xhtml>
              </documentation>
            </variable>
            <variable name="sProcessStepCorrelation">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; process steps in which the module is active</xhtml>
              </documentation>
            </variable>
            <variable name="sPowerUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; unit of nominal load and power consumption</xhtml>
              </documentation>
            </variable>
            <variable name="bOperatingPoint">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; module's switching state </xhtml>
              </documentation>
            </variable>
            <variable name="fProcessValue">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; process value influenced by the module</xhtml>
              </documentation>
            </variable>
            <variable name="aFlexibilityLimits">
              <type>
                <array>
                  <dimension lower="1" upper="2" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; upper and lower limits in which the energy-ﬂexible module may operate</xhtml>
              </documentation>
            </variable>
            <variable name="sProcessValueUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; unit of process value and flexibility limits</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fccdfa4d-f8c9-45ad-b6f3-9b950a4db300</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_CleaningChamberState">
        <baseType>
          <struct>
            <variable name="bPumpSupplyStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bRotationBasketStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bRotationBasketDirectionOfRotation">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bRotationNoozleFrameStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bExhaustAirFanStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bBlastNoozleTopStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bBlastNoozleBottomStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bProtectiveDoorLoadingOpen">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d136fb48-fd86-410c-8ad4-9fdf88341073</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_InterruptProcessState">
        <baseType>
          <struct>
            <variable name="stepPowerConsumption">
              <type>
                <derived name="ST_StepPowerConsumption" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; shows total energy consumption per step for all steps that can be interrupted</xhtml>
              </documentation>
            </variable>
            <variable name="stepDuration">
              <type>
                <derived name="ST_StepDuration" />
              </type>
            </variable>
            <variable name="sEnergyUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; unit of energy consumption</xhtml>
              </documentation>
            </variable>
            <variable name="fMachinePowerConsumption">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; current power consumption of the whole machine</xhtml>
              </documentation>
            </variable>
            <variable name="sPowerUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; unit of nmachine power consumption</xhtml>
              </documentation>
            </variable>
            <variable name="sMachineState">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; shows current machine state: oﬀ , standby , operational or working</xhtml>
              </documentation>
            </variable>
            <variable name="fInterruptionCountdown">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> dynamic; shows duration until the next position for process interruption is reached </xhtml>
              </documentation>
            </variable>
            <variable name="fInterruptionCountdownUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> static; unit of interruption countdown</xhtml>
              </documentation>
            </variable>
            <variable name="nInterruptedState">
              <type>
                <derived name="E_KEAOperatingState" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> last state before interruption </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6f74adb5-4708-4426-88eb-a15030125d05</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="E_SystemControlState">
        <baseType>
          <enum>
            <values>
              <value name="automatic" value="0" />
              <value name="algorithm" value="1" />
              <value name="manual" value="2" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9817809b-cf85-46c9-ae1f-a83f65c089ae</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="E_SystemOperatingState">
        <baseType>
          <enum>
            <values>
              <value name="standby" value="0" />
              <value name="rampUp" value="1" />
              <value name="rampDown" value="2" />
              <value name="operational" value="3" />
              <value name="working" value="4" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3ae62665-110e-4839-b666-82d251e02aac</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_Control">
        <baseType>
          <struct>
            <variable name="bSetStatusOnAlgorithm">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">turn actor on</xhtml>
              </documentation>
            </variable>
            <variable name="bSetStatusOnManual">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">turn actor on</xhtml>
              </documentation>
            </variable>
            <variable name="bAlgorithmModeActivated">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">activate algorithm control</xhtml>
              </documentation>
            </variable>
            <variable name="bManualModeActivated">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">activate manual control</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>40e53a86-8401-4ed8-b8d6-786a48036178</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_ControlState">
        <baseType>
          <struct>
            <variable name="bStatusOn">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">status on / off</xhtml>
              </documentation>
            </variable>
            <variable name="sAccessMode">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current access mode as string</xhtml>
              </documentation>
            </variable>
            <variable name="nAccessmode">
              <type>
                <derived name="E_SystemControlState" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current access mode (1 = automatic, 2 = algorihm, 3 = manual)</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>65125475-c668-47ed-8c3b-4d8abf97b67a</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_SensorState">
        <baseType>
          <struct>
            <variable name="fValue">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">status on / off</xhtml>
              </documentation>
            </variable>
            <variable name="sUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current unit of sensor value</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2975f68f-a189-46c5-b8f3-10203fb5a404</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_SetPointState">
        <baseType>
          <struct>
            <variable name="fOperatingPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current operating point</xhtml>
              </documentation>
            </variable>
            <variable name="fSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current set point</xhtml>
              </documentation>
            </variable>
            <variable name="sSetPointUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current set point unit</xhtml>
              </documentation>
            </variable>
            <variable name="sOperatingPointUnit">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">current operating point unit </xhtml>
              </documentation>
            </variable>
            <variable name="aSetPointLimits">
              <type>
                <array>
                  <dimension lower="1" upper="2" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">lower and upper limit of setpoint</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a8ea9f16-1a3b-41a0-9776-e9b4f11e9876</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_SetSetPoint">
        <baseType>
          <struct>
            <variable name="fSetPointAlgorithm">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">set setpoint in percent 0.0 - 100.0</xhtml>
              </documentation>
            </variable>
            <variable name="fSetPointManual">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">set setpoint in percent 0.0 - 100.0</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc9d9154-e319-49de-a744-1380eb17eb3f</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_SystemState">
        <baseType>
          <struct>
            <variable name="sOperatingState">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">operating state (standby, operational, working)</xhtml>
              </documentation>
            </variable>
            <variable name="nOperatingState">
              <type>
                <derived name="E_SystemOperatingState" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">operating state (standby, operational, working)</xhtml>
              </documentation>
            </variable>
            <variable name="bError">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">true if there is an error in any system component</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e9d0f5d3-d47e-485c-a637-88ed8eb03f8a</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_InletAirHeatingErrorState">
        <baseType>
          <struct>
            <variable name="bInletAirShutOffValveOpeningError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirShutOffValveClosingError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirShutOffValveSensorsError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirFanError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bAirSupplyTempSensorError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorAirTemperatureCriticalLow">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bErrorAirTemperatureCriticalHigh">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ac6adde2-125d-44ff-9697-de1cb6c4c842</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_TempSensorState">
        <baseType>
          <struct>
            <variable name="senTdiag">
              <type>
                <derived name="IL_INLN_DIAG_CODE" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="none" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Sensor-Diagnose: Temperatur</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/datatypeinheritance" handleUnknown="implementation">
            <Inheritance>
              <Extends>ST_SensorState</Extends>
            </Inheritance>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0dd2f2dd-3192-44f9-a91e-601be5e75ca3</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_TankState">
        <baseType>
          <struct>
            <variable name="bTankHeatingOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bSupplyFreshWaterOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOilSeparationOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="fTankTemperature">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="bFilterMonitor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelMin">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelNominal">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelMax">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOilSeparationLevelMax">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bDemineralOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="fTankHeaterHysteresisWidth">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fTemperatureLimitLowerWorking">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fTemperatureLimitUpperWorking">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fTemperatureLimitLowerCritical">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fTemperatureLimitUpperCritical">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sTemperatureUnit">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fCleaningFluidSpecificHeatCapacity">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sCleaningFluidSpecificHeatCapacityUnit">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fCleaningFluidDensity">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sCleaningFluidDensityUnit">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fTankVolume">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sTankVolumeUnit">
              <type>
                <string />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b5dd73dd-cf55-451e-bc48-616c124ba432</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_InletAirHeatingState">
        <baseType>
          <struct>
            <variable name="fAirSupplyTemperature">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="bInletAirShutOffValveOpen">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirShutOffValveClosed">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bAirSupplyTempOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bAirSupplyFlowOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="fTemperatureLimitLowerCritical">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fTemperatureLimitUpperCritical">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="bInletAirFanStatusOn">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d8ea070e-03b5-4086-a656-4b9ba4d2d655</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_KEADefaultParameters">
        <baseType>
          <struct>
            <variable name="tBlastNoozlesPulseDuration">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#200ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0,2...1,0 Sekunden</xhtml>
              </documentation>
            </variable>
            <variable name="tBlastNoozlesPulsePeriod">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#700ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0,2...1,0 Sekunden</xhtml>
              </documentation>
            </variable>
            <variable name="tBasketHomeingDuration">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#500ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0,000...2,000 Sekunden - in Millisekunden verarbeiten</xhtml>
              </documentation>
            </variable>
            <variable name="fBasketRotationSpeed">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 1.5...4.0 l/min - Vorgabe für Frequenzumrichter</xhtml>
              </documentation>
            </variable>
            <variable name="tMaxDurationExhaustFanOn">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Zeitliche Begrenzung Abluftgebläse wenn Tür offen</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="none" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f390229f-c7ca-451c-89c6-743db9036dc2</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="E_KEAOperatingState">
        <baseType>
          <enum>
            <values>
              <value name="standby" value="0" />
              <value name="rampUp" value="1" />
              <value name="operational" value="2" />
              <value name="sprayCleaning" value="3" />
              <value name="dripping" value="4" />
              <value name="suction" value="5" />
              <value name="blowing" value="6" />
              <value name="convectionDrying" value="7" />
              <value name="homing" value="8" />
              <value name="interruption" value="9" />
              <value name="break" value="10" />
              <value name="error" value="11" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c97a5cc6-33df-46bb-82a8-83c6f1364c6d</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_KEAProgramState">
        <baseType>
          <struct>
            <variable name="sActiveProgram">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fTankTemperatureSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 30...75°C</xhtml>
              </documentation>
            </variable>
            <variable name="fTankHeaterHysteresisWidth">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Definiert Range der Tankheizung</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitLowerWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> minimal temperature to start process</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitUpperWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximal temperature to start process</xhtml>
              </documentation>
            </variable>
            <variable name="fAirHeatingTemperatureSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 50...110°C</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSprayCleaning">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationDripping">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSuction">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationBlowing">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationConvectionDrying">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette	</xhtml>
              </documentation>
            </variable>
            <variable name="bProgramWithBasketRotation">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="sTypeWorkpiece">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fMassWorkpiece">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sMassWorkpieceUnit">
              <type>
                <string />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>882a4f4a-ed89-4783-a9fe-a0860fbb9c34</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_KEAState">
        <baseType>
          <struct>
            <variable name="sKEAOperatingState">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">operating state (standby, operational, rampUp, working, sprayCleaning, dripping, suction, blowing, convectionDrying, homing, interruption)</xhtml>
              </documentation>
            </variable>
            <variable name="nKEAOperatingState">
              <type>
                <derived name="E_KEAOperatingState" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">operating state (standby, operational, rampUp, working, sprayCleaning, dripping, suction, blowing, convectionDrying, homing, interruption)</xhtml>
              </documentation>
            </variable>
            <variable name="nWorkpieces">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="fMassWorkpiece">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fCurrent">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fRealPower">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fReactivePower">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fFrequency">
              <type>
                <REAL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d824d202-8f52-4c0d-8119-ef9dd7c155c7</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_KEAErrorState">
        <baseType>
          <struct>
            <variable name="bGlobalError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankHeatingSystemError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirHeatingSystemError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bEmergencyStopError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bConditionToStartError">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d8572952-e802-4d58-a52a-10486a411a38</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_CleaningChamberErrorState">
        <baseType>
          <struct>
            <variable name="bMotorsDrivesError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bDoorLoadingSafetyError">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0203f354-c709-427d-83bf-d94dde6114eb</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_StepPowerConsumption">
        <baseType>
          <struct>
            <variable name="fPowerConsumptionCleaning">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fPowerConsumptionDrying">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fPowerConsumptionBlowing">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fPowerConsumptionOperational">
              <type>
                <REAL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5c96aef4-390f-456c-a03b-af3101b08b3b</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_StepDuration">
        <baseType>
          <struct>
            <variable name="fDurationSprayCleaning">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fDurationDripping">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fDurationSuction">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fDurationBlowing">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fDurationConvectionDrying">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sDurationUnit">
              <type>
                <string />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="symbol" Value="readwrite" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a18e64c9-336a-4c3b-85b0-3f48b6825697</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="PRG_AnalogInputs" pouType="program">
        <interface>
          <localVars>
            <variable name="fbAI3">
              <type>
                <derived name="IL_AI8SfIs" />
              </type>
            </variable>
            <variable name="wInProcessData">
              <type>
                <array>
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="wOutProcessData">
              <type>
                <array>
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
          <outputVars>
            <variable name="tankTempSensor">
              <type>
                <derived name="ST_TempSensorState" />
              </type>
            </variable>
            <variable name="airSupplyTempSensor">
              <type>
                <derived name="ST_TempSensorState" />
              </type>
            </variable>
          </outputVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Konfiguration (Tempertur Sensoren 4...20 mA)

//Tanktemperatur
fbAI3.ChannelConfig[0].InputRange 	:= IL_INLN_AI_RANGE.UNIPOLAR4TO20MA;
fbAI3.ChannelConfig[0].HighLimit 	:= REAL#100.0;		// 100°C
fbAI3.ChannelConfig[0].LowLimit   	:= REAL#0.0;		// 0°C
fbAI3.ChannelConfig[0].NoOfSamples 	:= BYTE#16;

//Zulufttemperatur
fbAI3.ChannelConfig[1].InputRange 	:= IL_INLN_AI_RANGE.UNIPOLAR4TO20MA;
fbAI3.ChannelConfig[1].HighLimit 	:= REAL#300.0;		// 300°C
fbAI3.ChannelConfig[1].LowLimit   	:= REAL#0.0;		// 0°C
fbAI3.ChannelConfig[1].NoOfSamples 	:= BYTE#16;




fbAI3.ChannelSelect                	:= BYTE#2#00000111;
fbAI3.InProcData_0                 	:= wInProcessData[0];
fbAI3.InProcData_1                 	:= wInProcessData[1];
wOutProcessData[0]                  := fbAI3.OutProcData_0;
wOutProcessData[1]                  := fbAI3.OutProcData_1; 

// FB-Aufruf
fbAI3(Enable :=TRUE);

// Daten lesen
IF fbAI3.InOperation = TRUE THEN	
	//neu:
	// Normalisierte Werte speichern
	tankTempSensor.fValue		:= fbAI3.OutputData[0].NormalizedValue;
	airSupplyTempSensor.fValue	:= fbAI3.OutputData[1].NormalizedValue;
	
	// set sensor value unit
	tankTempSensor.sUnit 		:= 'degreeC';
	airSupplyTempSensor.sUnit 	:= 'degreeC';
	
	// Diagnose-Codes speichern
	tankTempSensor.senTdiag			:= fbAI3.OutputData[0].DiagCode;
	airSupplyTempSensor.senTdiag	:= fbAI3.OutputData[1].DiagCode;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b4d27cf5-1ebc-4473-b645-be38e3ea7334</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Plc_Main" pouType="program">
        <interface>
          <localVars>
            <variable name="KEA">
              <type>
                <derived name="FB_KEASystem" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* vvvvvvvvvvvvvvvvvvvvvvvvvvvv nicht ändern vvvvvvvvvvvvvvvvvvvvvvvvvvvv *)

(*------------------ Errors &amp; Warnings -------------*)
//PRG_Errors();
//PRG_Warnings();

(*------------------ Input / Output Mapping -------------*)
PRG_AnalogInputs();
PRG_AnalogOutputs();
prPowerMeasurementUMG();
(*------------------ Cleaning program -------------*)
KEA(bSetStatusOnAutomatic := TRUE);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ac84cc45-b99f-4718-8948-41c8abf9eee4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PRG_AnalogOutputs" pouType="program">
        <interface>
          <inputVars>
            <variable name="comBasketRotation">
              <type>
                <derived name="ST_ComBasketRotation" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="fbAO1">
              <type>
                <derived name="IL_AO2SfBp" />
              </type>
            </variable>
            <variable name="wInProcessData">
              <type>
                <array>
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="wOutProcessData">
              <type>
                <array>
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Konfiguration (Drehzahl_Antr_Korb)
fbAO1.ModuleType := IL_INLN_SF_BP.BPUNIPOLAR10V;
fbAO1.ResetOutput := TRUE;
fbAO1.NonVolatile := TRUE;
fbAO1.InputData[0].HighLimit := REAL#4.0;
fbAO1.InputData[0].LowLimit := REAL#0.0;
fbAO1.ChannelSelect := BYTE#2#00000001;
fbAO1.InProcData_0 := wInProcessData[0];
fbAO1.InProcData_1 := wInProcessData[1];
wOutProcessData[0] := fbAO1.OutProcData_0 ;
wOutProcessData[1] := fbAO1.OutProcData_1 ;

// FB-Aufruf
fbAO1(Enable :=TRUE);

// Daten ausgeben
(* Sobald der FB arbeitet, beginnt er sein Spannungs- bzw. Stromsignal zu erzeugen.   
Die Ausgabe variiert dabei entsprechend dem Wert am 'Normalized value'-Eingang.*)
IF fbAO1.InOperation = TRUE THEN
	// Normalisierte Werte ausgeben
	fbAO1.InputData[0].NormalizedValue := comBasketRotation.fBasketRotationSpeed;
		
	// Diagnose-Codes speichern
	comBasketRotation.diagCodeBasketRotation := fbAO1.DiagCode_0;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e80cb33d-c3c0-469e-bc3f-20cba888a9de</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="prPowerMeasurementUMG" pouType="program">
        <interface>
          <outputVars>
            <variable name="PowerMeasurementUMG">
              <type>
                <derived name="ST_PowerMeasurementUMG96RM" />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="modePowerMeasurementUMG">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="8" />
              </initialValue>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="mode" address="%QB14">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="wInProcessData" address="%IW14">
              <type>
                <array>
                  <dimension lower="0" upper="124" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="processword">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pointR">
              <type>
                <pointer>
                  <baseType>
                    <REAL />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">mode := modePowerMeasurementUMG;
PowerMeasurementUMG.modeReturn := BYTE_TO_INT(wInProcessData[1]);

IF (i &lt; (PowerMeasurementUMG.count))THEN
	processword := SHL(BYTE_TO_DWORD(wInProcessData[(0+(4*i))]), 24) OR SHL(BYTE_TO_DWORD(wInProcessData[(3+(4*i))]), 16) OR SHL(BYTE_TO_DWORD(wInProcessData[(2+(4*i))]), 8) OR BYTE_TO_DWORD(wInProcessData[(5+(4*i))]);
	pointR := ADR(processword);
	PowerMeasurementUMG.value[i] := pointR^;
	PowerMeasurementUMG.CurrentTotal := PowerMeasurementUMG.value[10];
	PowerMeasurementUMG.RealPowerTotal  := PowerMeasurementUMG.value[18];
	PowerMeasurementUMG.ReactivePowerTotal  := PowerMeasurementUMG.value[19];
	PowerMeasurementUMG.Frequency  := PowerMeasurementUMG.value[17];
	i := i+1;
ELSE
	i :=0;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c4df5764-e460-47b1-a7bc-4b7e35df084d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_Actor2Point" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="bSetStatusOnAutomatic">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">turn actor on</xhtml>
              </documentation>
            </variable>
            <variable name="bAlgorithmPermission">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">is true if control by algorithm is allowed</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="control">
              <type>
                <derived name="ST_Control" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="controlState">
              <type>
                <derived name="ST_ControlState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bSetStatusOn">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">actual internal value to switch on</xhtml>
              </documentation>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">SelectControlMode();
controlState.bStatusOn := bSetStatusOn;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SelectControlMode" ObjectId="3e578076-f21b-4cb6-b8d9-37cde3c10288">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">//change access mode
IF control.bManualModeActivated THEN
	controlState.nAccessmode := E_SystemControlState.manual;
	controlState.sAccessMode := 'manual';
	bSetStatusOn := control.bSetStatusOnManual;
ELSIF control.bAlgorithmModeActivated AND bAlgorithmPermission THEN
	controlState.nAccessmode := E_SystemControlState.algorithm;
	controlState.sAccessMode := 'algorithm';
	bSetStatusOn := control.bSetStatusOnAlgorithm;
ELSE
	controlState.nAccessmode := E_SystemControlState.automatic;
	controlState.sAccessMode := 'automatic';
	bSetStatusOn := bSetStatusOnAutomatic;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="bStatusOn" ObjectId="fe20e69e-429c-460d-922a-3a74b2152010">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">bStatusOn := bSetStatusOn;</xhtml>
                  </ST>
                </body>
                <addData />
              </GetAccessor>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>779c39b8-c120-47da-8edf-760811555f3b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_Sensor" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="sensorState">
              <type>
                <derived name="ST_SensorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cd98d21b-bf68-4425-904d-46eec50867b1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_KEASystem" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="tank">
              <type>
                <derived name="FB_TankSystem" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> subsystems</xhtml>
              </documentation>
            </variable>
            <variable name="inletAirHeating">
              <type>
                <derived name="FB_InletAirHeatingSystem" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cleaningChamber">
              <type>
                <derived name="FB_CleaningChamberSystem" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bStartButton">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> sensors</xhtml>
              </documentation>
            </variable>
            <variable name="bEmergencyStopOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bConditionToStartOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UMG96RM_powerMeasurement">
              <type>
                <derived name="ST_PowerMeasurementUMG96RM" />
              </type>
            </variable>
            <variable name="localDefaultParameters">
              <type>
                <derived name="ST_KEADefaultParameters" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> default parameters</xhtml>
              </documentation>
            </variable>
            <variable name="localState">
              <type>
                <derived name="ST_KEAState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> states</xhtml>
              </documentation>
            </variable>
            <variable name="errorState">
              <type>
                <derived name="ST_KEAErrorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="programState">
              <type>
                <derived name="ST_KEAProgramState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="localSetParameters">
              <type>
                <derived name="ST_KEALocalSetParameters" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> parameter sets</xhtml>
              </documentation>
            </variable>
            <variable name="setKEAProgramManual">
              <type>
                <derived name="ST_SetKEAProgramManual" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bInterruptProcess">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> interruption</xhtml>
              </documentation>
            </variable>
            <variable name="interruptProcessState">
              <type>
                <derived name="ST_InterruptProcessState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bGlobalError">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> local variables</xhtml>
              </documentation>
            </variable>
            <variable name="tBlastNoozlesPulseDuration">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="localDefaultParameters.tBlastNoozlesPulseDuration" />
              </initialValue>
            </variable>
            <variable name="tBlastNoozlesPulsePeriod">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="localDefaultParameters.tBlastNoozlesPulsePeriod" />
              </initialValue>
            </variable>
            <variable name="tBasketHomeingDuration">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="localDefaultParameters.tBasketHomeingDuration" />
              </initialValue>
            </variable>
            <variable name="fBasketRotationSpeed">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="localDefaultParameters.fBasketRotationSpeed" />
              </initialValue>
            </variable>
            <variable name="tMaxDurationExhaustFanOn">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="localDefaultParameters.tMaxDurationExhaustFanOn" />
              </initialValue>
            </variable>
            <variable name="tTimeToNextInterruption">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="nWorkpieces">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> number of workpieces in tray</xhtml>
              </documentation>
            </variable>
            <variable name="fCurrent">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fRealPower">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fReactivePower">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="fFrequency">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="bStartExhaustFan">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="nSelectProgram">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> standard program 1 : Arepron</xhtml>
              </documentation>
            </variable>
            <variable name="bSetSelectedProgram">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bResetErrors">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOpenDoor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="sActiveProgram">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> state</xhtml>
              </documentation>
            </variable>
            <variable name="fTankTemperatureSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 30...75°C</xhtml>
              </documentation>
            </variable>
            <variable name="fTankHeaterHysteresisWidth">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Definiert Range der Tankheizung</xhtml>
              </documentation>
            </variable>
            <variable name="fAirHeatingTemperatureSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 50...110°C</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitLowerWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> minimal tempereture to start process</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitUpperWorking">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximal tempereture to start process</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSprayCleaning">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationDripping">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationSuction">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationBlowing">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette</xhtml>
              </documentation>
            </variable>
            <variable name="tDurationConvectionDrying">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Bereich: 0...300 Sekunden - Zeit für Schrittkette	</xhtml>
              </documentation>
            </variable>
            <variable name="bProgramWithBasketRotation">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="sTypeWorkpiece">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fMassWorkpiece">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_System2Point</Extends>
                <Implements>ITF_System</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">MAIN();
ReadInputs();
SelectProgram();

// instantiate submodels
tank(
	bGlobalError					:= bGlobalError,
	bResetErrors					:= bResetErrors,
	bAlgorithmPermission 			:= TRUE, 
	fSetPointAutomatic 				:= fTankTemperatureSetPoint, 
	fTankHeaterHysteresisWidth 		:= fTankHeaterHysteresisWidth,
	fTemperatureLimitLowerWorking 	:= fTemperatureLimitLowerWorking,
	fTemperatureLimitUpperWorking 	:= fTemperatureLimitUpperWorking
);
inletAirHeating(
	bGlobalError			:= bGlobalError,
	bResetErrors			:= bResetErrors,
	bAlgorithmPermission 	:= TRUE, 
	fSetPointAutomatic 		:= fAirHeatingTemperatureSetPoint
);
cleaningChamber(
	bGlobalError 				:= bGlobalError,
	bResetErrors				:= bResetErrors,
	tMaxDurationExhaustFanOn 	:= tMaxDurationExhaustFanOn
);
// set states
SetStates();

// set ouputs
outputs.bCPU_OK := TRUE;
PRG_AnalogOutputs.comBasketRotation.fBasketRotationSpeed := fBasketRotationSpeed;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="StartButtonEdgeDetection" ObjectId="e5672546-1779-4c1d-b3da-053d78a8cef5">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bButton">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">RisingEdge(CLK := bButton, Q =&gt; StartButtonEdgeDetection);</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadInputs" ObjectId="375d2af6-ce8f-4e06-a91f-bde8e7aca430">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// read sensors
bStartButton 		:= StartButtonEdgeDetection(inputs.bStartButton);
bEmergencyStopOk 	:= inputs.bEmergencyStopOk;
bConditionToStartOk	:= inputs.bConditionToStartOk;

// read from umg 96 rm
fCurrent 		:= prPowerMeasurementUMG.PowerMeasurementUMG.CurrentTotal;
fRealPower 		:= prPowerMeasurementUMG.PowerMeasurementUMG.RealPowerTotal;
fReactivePower 	:= prPowerMeasurementUMG.PowerMeasurementUMG.ReactivePowerTotal;
fFrequency 		:= prPowerMeasurementUMG.PowerMeasurementUMG.Frequency;

// read from opc ua
bResetErrors		:= localSetParameters.bResetErrors OR bStartButton;
bOpenDoor			:= localSetParameters.bOpenDoor;
bSetSelectedProgram := localSetParameters.bSetSelectedProgram;
IF bSetSelectedProgram THEN
	nSelectProgram	:= localSetParameters.nSelectProgram;
END_IF
nWorkpieces			:= localSetParameters.nWorkpieces;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Standby" ObjectId="44749baa-1c8d-4978-984a-58fa45d7df4c">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn all cleaning chamber actors off
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= FALSE;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn off tank heating
tank.bSetStatusOnAutomatic := FALSE;

// open door if wanted
CleaningChamber.OpenDoor(
	bOpenDoor := bOpenDoor, 
	bInletAirHeaterOnStatus := inletAirHeating.bInletAirHeaterOn, 
	nActiveState := systemState.nOperatingState
);</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SprayCleaning" ObjectId="fc08ba5e-83af-4aaa-aca8-9b0482c8d93e">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn on pump, basket rotation if wanted and noozle frame
CleaningChamber.bPumpSupplyOn						:= TRUE;
CleaningChamber.bRotationBasketEnable 				:= bProgramWithBasketRotation;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= TRUE;
CleaningChamber.bExhaustAirFanOn 					:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Dripping" ObjectId="7e70a761-6693-4446-9b6b-483fcd9f73d5">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn on basket rotation if wanted, invert rotation
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= bProgramWithBasketRotation;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= TRUE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bExhaustAirFanOn 					:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Suction" ObjectId="2a839280-ea41-4181-9c16-b7b59e276f61">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn on basket rotation if wanted, invert rotation to normal, turn on exhaust air fan
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= bProgramWithBasketRotation;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bExhaustAirFanOn 					:= TRUE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Blowing" ObjectId="623ef555-8664-4507-a023-431a89ce5642">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <localVars>
                  <variable name="bBlastNoozleBottomOn">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bBlastNoozleTopOn">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// call blast noozle control method
CleaningChamber.CtrlBlastNoozles(
	tBlastNoozlesPulseDuration := tBlastNoozlesPulseDuration,
	tBlastNoozlesPulsePeriod := tBlastNoozlesPulsePeriod,
	bBlastNoozleBottomOn =&gt; bBlastNoozleBottomOn, 
	bBlastNoozleTopOn =&gt; bBlastNoozleTopOn
);

// control blast noozles
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= bProgramWithBasketRotation;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bExhaustAirFanOn 					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= bBlastNoozleBottomOn;
CleaningChamber.bBlastNoozleTopOn					:= bBlastNoozleTopOn;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ConvectionDrying" ObjectId="e746ce1b-a8a3-44b3-b188-f239bb6676c8">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn on basket rotation if wanted, invert rotation to normal, turn on exhaust air fan
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= bProgramWithBasketRotation;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bExhaustAirFanOn 					:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn on air heating
inletAirHeating.bSetStatusOnAutomatic := TRUE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Homing" ObjectId="f7d99f97-bda4-45ca-9ef9-bab5ded3fe78">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bNotOpenDoorAfterHoming">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="bHomingFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="rTrigPositiveEdgeBasketHomed">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="rTrigPositiveEdgeFrameHomed">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT bHomingStarted THEN
	fBasketRotationSpeedOld := fBasketRotationSpeed;
	bHomingStarted 			:= TRUE;
	nBasketHomingState 		:= 1;
	bBasketHomingFinished	:= FALSE;
END_IF 

// detect homing of basket and noozle frame
rTrigPositiveEdgeBasketHomed(CLK := CleaningChamber.bBasketHomed);
rTrigPositiveEdgeFrameHomed(CLK := CleaningChamber.bNoozleFrameHomed);

// basket homeing has to continue for a few seconds
tofDelayBasketHomeing(IN := rTrigPositiveEdgeBasketHomed.Q, PT := tBasketHomeingDuration);

CASE nBasketHomingState OF
	1: // normal homing
		bBasketHoming 			:= TRUE;
		// normal direction of basket rotation 
		cleaningChamber.bRotationBasketDirectionOfRotation := FALSE;
		IF rTrigPositiveEdgeBasketHomed.Q THEN
			nBasketHomingState := 2;
		END_IF
	2: // homing delay
		bBasketHoming := TRUE;
		// invert direction of basket rotation 
		cleaningChamber.bRotationBasketDirectionOfRotation := TRUE;
		IF NOT tofDelayBasketHomeing.Q THEN
			bBasketHomingFinished := TRUE;
			nBasketHomingState := 3;
		END_IF
	3: // homing finished
		bBasketHoming 			:= FALSE;
		// normal direction of basket rotation 
		cleaningChamber.bRotationBasketDirectionOfRotation := FALSE;
END_CASE

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;

// if basket and noozle frame are finished stop rotation, reset basket rotation speed and direction and terminate homing
IF bBasketHomingFinished AND rTrigPositiveEdgeFrameHomed.Q THEN
	CleaningChamber.bRotationBasketEnable 				:= FALSE;
	CleaningChamber.bRotationNoozleFrameEnable			:= FALSE;
	fBasketRotationSpeed								:= fBasketRotationSpeedOld;
	cleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
	bHomingStarted										:= FALSE;
	bHomingFinished 									:= TRUE;
	// open door only if in normal homing state not after error
	IF NOT bNotOpenDoorAfterHoming THEN
		CleaningChamber.OpenDoor(
			bOpenDoor := TRUE, 
			bInletAirHeaterOnStatus := inletAirHeating.bInletAirHeaterOn, 
			nActiveState := E_SystemOperatingState.operational
		);
	END_IF
ELSE
	// else operate homing with slow basket rotation
	CleaningChamber.bRotationBasketEnable 		:= bBasketHoming;
	CleaningChamber.bRotationNoozleFrameEnable 	:= NOT rTrigPositiveEdgeFrameHomed.Q;
	fBasketRotationSpeed 						:= 1;
END_IF

// turn off other actors
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SystemFlowControl" ObjectId="19e8acb4-f8ca-43b1-b197-057ea5b73212">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CheckError(bError =&gt; bSystemError);
systemState.bError := bSystemError;
TimeToNextInterruption(nKEAState := nKEAState, tStepElapsedTime := tStepElapsedTime);
tonStepTimer(Q =&gt; bSwitchState);

// reset remaining step time to zero when step is finished
IF bSwitchState THEN
	tStepTimeRemaining := T#0S;
END_IF

IF bSystemError THEN
	nKEAState := E_KEAOperatingState.error;
END_IF

CASE nKEAState OF
	E_KEAOperatingState.standby:
		nState := E_SystemOperatingState.standby;
		systemState.sOperatingState := 'standby';
		localState.sKEAOperatingState := 'standby';
		Standby();
		bSwitchState := FALSE;
		//if turned on switch to ramp-up
		IF(bSetStatusOn) THEN
			nKEAState := E_KEAOperatingState.rampUp;
		END_IF
	E_KEAOperatingState.rampUp:
		nState := E_SystemOperatingState.rampUp;
		systemState.sOperatingState := 'ramp-up';
		localState.sKEAOperatingState := 'ramp-up';
		RampUp(bRampUpFinished =&gt; bSwitchState);
		//if turned off switch to stand by
		IF(NOT bSetStatusOn) THEN
			nKEAState := E_KEAOperatingState.standby;
		//if ramp-up finished switch to operational
		ELSIF(bSwitchState) THEN
			nKEAState := E_KEAOperatingState.operational;
		END_IF
	E_KEAOperatingState.operational:
		nState := E_SystemOperatingState.operational;
		systemState.sOperatingState := 'operational';
		localState.sKEAOperatingState := 'operational';
		Operational(bSwitchToWorking =&gt; bSwitchState);
		//if turned off switch to stand-by
		IF(NOT bSetStatusOn) THEN
			nKEAState := E_KEAOperatingState.standby;
		ELSIF(bSwitchState) THEN
			// switch to interruption if interrupted
			IF(bInterruptProcess) THEN
				nInterruptedState := nKEAState;
				nKEAState := E_KEAOperatingState.interruption;
			// switch to sprayCleaning if desired
			ELSE
			nKEAState := E_KEAOperatingState.sprayCleaning;
			END_IF
		END_IF
	E_KEAOperatingState.sprayCleaning:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - spray cleaning';
		tonStepTimer(IN := TRUE, PT := tDurationSprayCleaning - tStepTimeRemaining, Q =&gt; bSwitchState, ET =&gt; tStepElapsedTime);
		SprayCleaning();
		// pause process step if button is pushed
		IF bStartButton THEN
			nStateInBreak := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		//if cleaning is finished switch to dripping
		ELSIF(bSwitchState) THEN
			tonStepTimer.IN := FALSE;
			nKEAState := E_KEAOperatingState.dripping;
		END_IF
	E_KEAOperatingState.dripping:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - dripping';
		tonStepTimer(IN := TRUE, PT := tDurationDripping - tStepTimeRemaining, Q =&gt; bSwitchState, ET =&gt; tStepElapsedTime);
		Dripping();
		// pause process step if button is pushed
		IF bStartButton THEN
			nStateInBreak := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		//if dripping is finished switch to suction
		ELSIF(bSwitchState) THEN
			tonStepTimer.IN := FALSE;
			nKEAState := E_KEAOperatingState.suction;
		END_IF
	E_KEAOperatingState.suction:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - suction';
		tonStepTimer(IN := TRUE, PT := tDurationSuction - tStepTimeRemaining, Q =&gt; bSwitchState, ET =&gt; tStepElapsedTime);
		Suction();
		// pause process step if button is pushed
		IF bStartButton THEN
			nStateInBreak := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		//if suction is finished switch to blowing
		ELSIF(bSwitchState) THEN
			tonStepTimer.IN := FALSE;
			nKEAState := E_KEAOperatingState.blowing;
		END_IF
	E_KEAOperatingState.blowing:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - blowing';
		tonStepTimer(IN := TRUE, PT := tDurationBlowing - tStepTimeRemaining, Q =&gt; bSwitchState, ET =&gt; tStepElapsedTime);
		Blowing();
		// pause process step if button is pushed
		IF bStartButton THEN
			nStateInBreak := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		ELSIF(bSwitchState) THEN
			// switch to interruption if interrupted
			IF(bInterruptProcess) THEN
				nInterruptedState := nKEAState;
				nKEAState := E_KEAOperatingState.interruption;
			//if blowing is finished switch to convection drying
			ELSE
			tonStepTimer.IN := FALSE;
			nKEAState := E_KEAOperatingState.convectionDrying;
			END_IF
		END_IF
	E_KEAOperatingState.convectionDrying:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - convection drying';
		tonStepTimer(IN := TRUE, PT := tDurationConvectionDrying - tStepTimeRemaining, Q =&gt; bSwitchState, ET =&gt; tStepElapsedTime);
		ConvectionDrying();
		// pause process step if button is pushed
		IF bStartButton THEN
			nStateInBreak := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		//if convection drying is finished switch to homing
		ELSIF(bSwitchState) THEN
			tonStepTimer.IN := FALSE;
			nKEAState := E_KEAOperatingState.homing;
		END_IF
	E_KEAOperatingState.homing:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - homing';
		Homing(bNotOpenDoorAfterHoming := bErrorResetHoming, bHomingFinished =&gt; bSwitchState);
		// pause process step if button is pushed
		IF bStartButton THEN
			nInterruptedState := nKEAState;
			nKEAState := E_KEAOperatingState.break;
		//if homing is finished switch to operational
		ELSIF(bSwitchState) THEN
			nKEAState := E_KEAOperatingState.standby;
			bErrorResetHoming := FALSE;
		END_IF
	E_KEAOperatingState.interruption:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';
		localState.sKEAOperatingState := 'working - interruption';
		Operational();
		//if interruption is terminated switch to next step
		IF(NOT bInterruptProcess) THEN
			nKEAState := nInterruptedState + 1;
			tonStepTimer.IN := FALSE;
		END_IF
	E_KEAOperatingState.break:
		nState := E_SystemOperatingState.working;
		systemState.sOperatingState := 'working';	
		localState.sKEAOperatingState := 'working - break';
		Operational(bSwitchToWorking =&gt; bSwitchState);
		//if break is terminated switch to next step
		IF bSwitchState THEN
			nKEAState := nStateInBreak;
		END_IF
	E_KEAOperatingState.error:
		nState := E_SystemOperatingState.standby;
		systemState.sOperatingState := 'standby';	
		localState.sKEAOperatingState := 'error';
		flipFlopResetErrors(SET1 := bResetErrors, RESET := (nKEAState = E_KEAOperatingState.error));
		// only start tank heater in ramp-up
		RampUp();
		IF flipFlopResetErrors.Q1 THEN
			bErrorResetHoming := TRUE;
			Homing(bNotOpenDoorAfterHoming := bErrorResetHoming, bHomingFinished =&gt; bSwitchState);
			IF bSwitchState THEN
				nKEAState := E_KEAOperatingState.standby;
			ELSE
				nKEAState := E_KEAOperatingState.homing;		
			END_IF
		END_IF
END_CASE
systemState.nOperatingState := nState;
localState.nKEAOperatingState := nKEAState;
interruptProcessState.nInterruptedState := nInterruptedState;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="36d3165b-ff78-4ef6-9c79-f48d6fd6e465">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// local errors
S1(SET1 := NOT bEmergencyStopOk, RESET := bResetErrors, Q1 =&gt; errorState.bEmergencyStopError);
S2(SET1 := NOT bConditionToStartOk, RESET := bResetErrors, Q1 =&gt; errorState.bConditionToStartError);

// subsystem errors
inletAirHeating.CheckError(bError =&gt; errorState.bInletAirHeatingSystemError);
tank.CheckError(bError =&gt; errorState.bTankHeatingSystemError);

bError := (
	errorState.bEmergencyStopError OR
	errorState.bConditionToStartError OR
	errorState.bInletAirHeatingSystemError OR
	errorState.bTankHeatingSystemError
);

// set global error
bGlobalError := bError;
errorState.bGlobalError := bGlobalError;
CheckError := bError;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampUp" ObjectId="12c31a46-4515-4ee1-87cf-dda7e2722c82">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampUpFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn all cleaning chamber actors off
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= FALSE;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bExhaustAirFanOn 					:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;

// if tank heating is finished, ramp-up is finished
IF tank.nTankHeaterState = E_SystemOperatingState.operational THEN
	bRampUpFinished := TRUE;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Operational" ObjectId="615e2e91-ad80-4328-b351-bbd88ce158cb">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToWorking">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn all cleaning chamber actors off
CleaningChamber.bPumpSupplyOn						:= FALSE;
CleaningChamber.bRotationBasketEnable 				:= FALSE;
CleaningChamber.bRotationBasketDirectionOfRotation 	:= FALSE;
CleaningChamber.bRotationNoozleFrameEnable 			:= FALSE;
CleaningChamber.bBlastNoozleTopOn					:= FALSE;
CleaningChamber.bBlastNoozleBottomOn				:= FALSE;

// turn off air heating
inletAirHeating.bSetStatusOnAutomatic := FALSE;

// turn on tank heating
tank.bSetStatusOnAutomatic := TRUE;

// open door if wanted
CleaningChamber.OpenDoor(
	bOpenDoor := bOpenDoor, 
	bInletAirHeaterOnStatus := inletAirHeating.bInletAirHeaterOn, 
	nActiveState := systemState.nOperatingState
);

// if start button is pressed and door is closed, start cleaning process 
bSwitchToWorking := (
	bStartButton AND 
	cleaningChamber.bDoorClosed AND
	NOT bGlobalError AND
	tank.fTankTemperature &lt; fTemperatureLimitUpperWorking AND 
	tank.fTankTemperature &gt; fTemperatureLimitLowerWorking
);</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SelectProgram" ObjectId="78687eee-e41e-4680-b483-892693c0e5b2">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Definition der Programmschrittlänge und prozessparameter*)
IF (control.bManualModeActivated) THEN
	sActiveProgram := 'manual';	
	fTankTemperatureSetPoint		:= setKEAProgramManual.fTankTemperatureSetPointManual; 			//Bereich: 30...75°C
	fAirHeatingTemperatureSetPoint	:= setKEAProgramManual.fAirHeatingTemperatureSetPointManual; 	//Bereich: 50...110°C
	tDurationSprayCleaning			:= setKEAProgramManual.tDurationSprayCleaningManual;			//Bereich: 0...300 Sekunden - Zeit für Schrittkette
	tDurationDripping				:= setKEAProgramManual.tDurationDrippingManual;					//Bereich: 0...300 Sekunden - Zeit für Schrittkette
	tDurationSuction				:= setKEAProgramManual.tDurationSuctionManual;					//Bereich: 0...300 Sekunden - Zeit für Schrittkette
	tDurationBlowing				:= setKEAProgramManual.tDurationBlowingManual;					//Bereich: 0...300 Sekunden - Zeit für Schrittkette
	tDurationConvectionDrying		:= setKEAProgramManual.tDurationConvectionDryingManual;			//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
	fTankHeaterHysteresisWidth		:= setKEAProgramManual.fTankHeaterHysteresisWidthManual;		// Definiert Range der Tankheizung
	fTemperatureLimitLowerWorking 	:= setKEAProgramManual.fTemperatureLimitLowerWorking;
	fTemperatureLimitUpperWorking 	:= setKEAProgramManual.fTemperatureLimitUpperWorking;
	bProgramWithBasketRotation		:= setKEAProgramManual.bProgramWithBasketRotation;		// Keine Korbrotation
	sTypeWorkpiece					:= setKEAProgramManual.sTypeWorkpiece;
	fMassWorkpiece					:= setKEAProgramManual.fMassWorkpiece;		// mass in kg	
ELSE
	CASE nSelectProgram OF
		1:
			sActiveProgram := 'ArePron';
			fTankTemperatureSetPoint		:= 60; 			//Bereich: 30...75°C
			fAirHeatingTemperatureSetPoint	:= 110; 		//Bereich: 50...110°C
			tDurationSprayCleaning			:= T#600S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationDripping				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationSuction				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationBlowing				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationConvectionDrying		:= T#90S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
			fTankHeaterHysteresisWidth		:= 2;			// Definiert Range der Tankheizung
			fTemperatureLimitLowerWorking 	:= 55;
			fTemperatureLimitUpperWorking 	:= 65;
			bProgramWithBasketRotation		:= FALSE;		// Keine Korbrotation
			sTypeWorkpiece					:= 'Control plate';
			fMassWorkpiece					:= 0.262;		// mass in kg
		2:
			sActiveProgram := 'Schaumparty';
			fTankTemperatureSetPoint		:= 55; 			//Bereich: 30...75°C
			fAirHeatingTemperatureSetPoint	:= 110; 		//Bereich: 50...110°C
			tDurationSprayCleaning			:= T#240S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationDripping				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationSuction				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationBlowing				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationConvectionDrying		:= T#60S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
			fTankHeaterHysteresisWidth		:= 4;			// Definiert Range der Tankheizung	
			fTemperatureLimitLowerWorking 	:= 50;
			fTemperatureLimitUpperWorking 	:= 65;
			bProgramWithBasketRotation		:= FALSE;		// Keine Korbrotation
			sTypeWorkpiece					:= 'Control plate';
			fMassWorkpiece					:= 0.262;		// mass in kg
		3:
			sActiveProgram := 'Phi-Abschlussdemo';	
			fTankTemperatureSetPoint		:= 60; 			//Bereich: 30...75°C
			fAirHeatingTemperatureSetPoint	:= 110; 		//Bereich: 50...110°C
			tDurationSprayCleaning			:= T#30S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationDripping				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationSuction				:= T#10S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationBlowing				:= T#11S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationConvectionDrying		:= T#41S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
			fTankHeaterHysteresisWidth		:= 5;			// Definiert Range der Tankheizung
			fTemperatureLimitLowerWorking 	:= 55;
			fTemperatureLimitUpperWorking 	:= 65;
			bProgramWithBasketRotation		:= FALSE;		// Keine Korbrotation	
			sTypeWorkpiece					:= 'none';
			fMassWorkpiece					:= 0;		// mass in kg
		4:
			sActiveProgram := 'MaschinenTestlauf';	
			fTankTemperatureSetPoint		:= 60; 			//Bereich: 30...75°C
			fAirHeatingTemperatureSetPoint	:= 110; 		//Bereich: 50...110°C
			tDurationSprayCleaning			:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationDripping				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationSuction				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationBlowing				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationConvectionDrying		:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
			fTankHeaterHysteresisWidth		:= 5;			// Definiert Range der Tankheizung
			fTemperatureLimitLowerWorking 	:= 55;
			fTemperatureLimitUpperWorking 	:= 70;
			bProgramWithBasketRotation		:= TRUE;		// Korbrotation	
			sTypeWorkpiece					:= 'none';
			fMassWorkpiece					:= 0;		// mass in kg	
		5:
			sActiveProgram := 'CPSL_Testlauf';	
			fTankTemperatureSetPoint		:= 60; 			//Bereich: 30...75°C
			fAirHeatingTemperatureSetPoint	:= 110; 		//Bereich: 50...110°C
			tDurationSprayCleaning			:= T#45S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationDripping				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationSuction				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationBlowing				:= T#5S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette
			tDurationConvectionDrying		:= T#30S;		//Bereich: 0...300 Sekunden - Zeit für Schrittkette	
			fTankHeaterHysteresisWidth		:= 5;			// Definiert Range der Tankheizung
			fTemperatureLimitLowerWorking 	:= 55;
			fTemperatureLimitUpperWorking 	:= 70;
			bProgramWithBasketRotation		:= FALSE;		// Korbrotation	
			sTypeWorkpiece					:= 'Control plate';
			fMassWorkpiece					:= 0.262;		// mass in kg
	END_CASE
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetStates" ObjectId="7f5463a6-6517-4b4d-8b8e-248669273ffa">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set control state
controlState.bStatusOn := bStatusOn;

// set program state
programState.sActiveProgram					:= sActiveProgram;
programState.fTankTemperatureSetPoint		:= fTankTemperatureSetPoint;
programState.fTankHeaterHysteresisWidth 	:= fTankHeaterHysteresisWidth;
programState.fAirHeatingTemperatureSetPoint	:= fAirHeatingTemperatureSetPoint;
programState.tDurationSprayCleaning			:= tDurationSprayCleaning;
programState.tDurationDripping				:= tDurationDripping;
programState.tDurationSuction				:= tDurationSuction;
programState.tDurationBlowing				:= tDurationBlowing;
programState.tDurationConvectionDrying 		:= tDurationConvectionDrying;
programState.bProgramWithBasketRotation 	:= bProgramWithBasketRotation;
programState.fMassWorkpiece					:= fMassWorkpiece;
programState.sMassWorkpieceUnit				:= 'kg';
programState.sTypeWorkpiece					:= sTypeWorkpiece;

// set local state
// sKEAOperatingState and nKEAOperatingState are set in SystemFlowControl
localState.nWorkpieces		:= nWorkpieces;
localState.fCurrent 		:= fCurrent;
localState.fRealPower 		:= fRealPower;
localState.fReactivePower 	:= fReactivePower;
localState.fFrequency 		:= fFrequency;

// set interrupt process state
// nInterruptedState is set in SystemFlowControl
interruptProcessState.fMachinePowerConsumption := fRealPower;
interruptProcessState.sPowerUnit := 'W';
interruptProcessState.fInterruptionCountdown := TIME_TO_REAL(tTimeToNextInterruption) / 1000;
interruptProcessState.fInterruptionCountdownUnit := 's';
interruptProcessState.stepPowerConsumption.fPowerConsumptionBlowing := 980;
interruptProcessState.stepPowerConsumption.fPowerConsumptionCleaning := 3430;
interruptProcessState.stepPowerConsumption.fPowerConsumptionDrying := 9350;
interruptProcessState.stepPowerConsumption.fPowerConsumptionOperational := 200;
interruptProcessState.stepDuration.fDurationSprayCleaning := TIME_TO_REAL(tDurationSprayCleaning) / 1000;
interruptProcessState.stepDuration.fDurationDripping := TIME_TO_REAL(tDurationDripping) / 1000;
interruptProcessState.stepDuration.fDurationSuction := TIME_TO_REAL(tDurationSuction) / 1000;
interruptProcessState.stepDuration.fDurationBlowing	:= TIME_TO_REAL(tDurationBlowing) / 1000;
interruptProcessState.stepDuration.fDurationConvectionDrying := TIME_TO_REAL(tDurationConvectionDrying) / 1000;
interruptProcessState.stepDuration.sDurationUnit := 's';</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="TimeToNextInterruption" ObjectId="542bf08f-35cd-4d0e-beea-fc34967db003">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="nKEAState">
                    <type>
                      <derived name="E_KEAOperatingState" />
                    </type>
                  </variable>
                  <variable name="tStepElapsedTime">
                    <type>
                      <TIME />
                    </type>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE nKEAState OF
	E_KEAOperatingState.operational:
		tTimeToNextInterruption := T#0S;
	E_KEAOperatingState.sprayCleaning:
		tTimeToNextInterruption := tDurationSprayCleaning - tStepElapsedTime + tDurationDripping + tDurationSuction + tDurationBlowing;
	E_KEAOperatingState.dripping:
		tTimeToNextInterruption := tDurationDripping - tStepElapsedTime + tDurationSuction + tDurationBlowing;
	E_KEAOperatingState.suction:
		tTimeToNextInterruption := tDurationSuction - tStepElapsedTime + tDurationBlowing;
	E_KEAOperatingState.blowing:
		tTimeToNextInterruption := tDurationBlowing - tStepElapsedTime;
	E_KEAOperatingState.convectionDrying:
		tTimeToNextInterruption := tDurationConvectionDrying - tStepElapsedTime;
END_CASE
	
	</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>65eafd7c-523e-4dbc-b511-a1acca9b11b6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_ActorContinous" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="fSetPointAutomatic">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">unit depending setpoint</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="fOperatingPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">unit depending operating point</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="setSetPoint">
              <type>
                <derived name="ST_SetSetPoint" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="setPointState">
              <type>
                <derived name="ST_SetPointState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fSetPoint">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">actual set setpoint</xhtml>
              </documentation>
            </variable>
            <variable name="aSetPointLimits">
              <type>
                <array>
                  <dimension lower="1" upper="2" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">control mode and unit depending setpoint limits that are set by abstract method SetSetPointLimits() in a subclass </xhtml>
              </documentation>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_Actor2Point</Extends>
                <Implements>ITF_ActorContinous</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SelectControlMode" ObjectId="9487b088-9bc5-4a7e-8bf7-9767eafe3f05">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^.SelectControlMode();

//add changing set point to method
IF control.bManualModeActivated THEN
	fsetPoint := setSetPoint.fSetPointManual;
ELSIF control.bAlgorithmModeActivated AND bAlgorithmPermission THEN
	fsetPoint := setSetPoint.fSetPointAlgorithm;
ELSE
	fsetPoint := fSetPointAutomatic;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetPointCheck" ObjectId="a788f595-bc97-42ed-a5e1-110d1f06de83">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">fSetPoint := MAX(fSetPoint, aSetPointLimits[1]);
fSetPoint := MIN(fSetPoint, aSetPointLimits[2]);</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="MAIN" ObjectId="275add3d-01ef-4c7d-82e9-9c61ce55000f">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">SelectControlMode();
SetSetPointLimits();
SetPointCheck();</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetSetPointLimits" ObjectId="20ea23c7-31e4-4be6-923e-99efd0fbf44c">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bf14fbd8-524a-425b-a06d-fcbc597c9b1f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_TankSystem" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="nActiveState">
              <type>
                <derived name="E_SystemOperatingState" />
              </type>
              <initialValue>
                <simpleValue value="E_SystemOperatingState.standby" />
              </initialValue>
            </variable>
            <variable name="fTankHeaterHysteresisWidth">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="bGlobalError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bResetErrors">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="fTemperatureLimitLowerWorking">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="55" />
              </initialValue>
            </variable>
            <variable name="fTemperatureLimitUpperWorking">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="65" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="nTankHeaterState">
              <type>
                <derived name="E_SystemOperatingState" />
              </type>
              <initialValue>
                <simpleValue value="E_SystemOperatingState.standby" />
              </initialValue>
            </variable>
            <variable name="fTankTemperature">
              <type>
                <REAL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tankHeater">
              <type>
                <derived name="FB_Actor2Point" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> actors</xhtml>
              </documentation>
            </variable>
            <variable name="bSupplyFreshWaterOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOilSeparationOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="tankTempSensor">
              <type>
                <derived name="ST_TempSensorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> sensors</xhtml>
              </documentation>
            </variable>
            <variable name="bFilterMonitor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelMin">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelNominal">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bTankLevelMax">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOilSeparationLevelMax">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bDemineralOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="localState">
              <type>
                <derived name="ST_TankState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> states</xhtml>
              </documentation>
            </variable>
            <variable name="errorState">
              <type>
                <derived name="ST_TankErrorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="storeEnergyInherentlyState">
              <type>
                <derived name="ST_StoreEnergyInherentlyState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bSetStatusOnTankHeater">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> internal variables</xhtml>
              </documentation>
            </variable>
            <variable name="bAlgorithmPermissionTankHeater">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="fTemperatureLimitLowerCritical">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="20" />
              </initialValue>
            </variable>
            <variable name="fTemperatureLimitUpperCritical">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="85" />
              </initialValue>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_SystemContinous</Extends>
                <Implements>ITF_System</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">MAIN();
ReadInputs();
CheckAlgorithmPermission(fTemperatureOffset := 1);

// instantiate tank heater
tankHeater(
	bSetStatusOnAutomatic 	:= bSetStatusOnTankHeater AND NOT bGlobalError,
	bAlgorithmPermission 	:= bAlgorithmPermissionTankHeater
);

// turn on fresh water if not in error and tank level is not nominal and if in working
bSupplyFreshWaterOn := NOT bGlobalError AND NOT bTankLevelNominal AND nActiveState = E_SystemOperatingState.working;

// control oil separation
bOilSeparationOn := OilSeparation();

// set states
SetStates();

// set local outputs
nTankHeaterState := systemState.nOperatingState;

SetOutputs();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadInputs" ObjectId="24c6df26-624b-4a9c-bac0-b7316946e6af">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// read tank temperature
PRG_AnalogInputs(tankTempSensor =&gt; tankTempSensor);
fTankTemperature := tankTempSensor.fValue;

// read inputs
bFilterMonitor 			:= inputs.bFilterMonitor;
bTankLevelMin 			:= NOT inputs.bTankLevelMin_NOT;
bTankLevelNominal		:= NOT inputs.bTankLevelNominal_NOT;
bTankLevelMax			:= NOT inputs.bTankLevelMax_NOT;
bOilSeparationLevelMax 	:= inputs.bOilSeparationLevelMax;
bDemineralOk 			:= inputs.bDemineralOk;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetOutputs" ObjectId="350ded10-08ad-481f-80df-d63d34efaf72">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set ouputs
outputs.bTankHeatingOn 		:= tankHeater.bStatusOn;
outputs.bSupplyFreshWaterOn := bSupplyFreshWaterOn;
outputs.bOilSeparationOn 	:= bOilSeparationOn;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="cb79b8cf-9bb8-4ddb-b405-29ad32eac043">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">T1(IN := bTankLevelMin, PT := T#3S);
S1(SET1 := T1.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorTankLevelLow);

T2(IN := bTankLevelMax, PT := T#3S);
S2(SET1 := T2.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorTankLevelFull);

T3(IN := NOT bDemineralOk AND bSupplyFreshWaterOn, PT := T#5S);
S3(SET1 := T3.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorFreshWaterSupply);

T4(IN := fTankTemperature &lt; fTemperatureLimitLowerCritical, PT := T#1S);
S4(SET1 := T4.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorTankTemperatureCriticalLow);

T5(IN := fTankTemperature &gt; fTemperatureLimitUpperCritical, PT := T#1S);
S5(SET1 := T4.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorTankTemperatureCriticalHigh);

bError := (
	errorState.bErrorTankLevelLow OR
	errorState.bErrorTankLevelFull OR
	errorState.bErrorFreshWaterSupply OR
	errorState.bErrorTankTemperatureCriticalLow OR 
	errorState.bErrorTankTemperatureCriticalHigh
);
CheckError := bError;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampUp" ObjectId="d96f4c90-d947-4a94-835a-214083734679">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampUpFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn tank heater on for warm-up
IF fTankTemperature &lt; fTemperatureLimitLowerWorking THEN
	bSetStatusOnTankHeater := TRUE;
	bRampUpFinished := FALSE;
ELSE
	bRampUpFinished := TRUE;
END_IF
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="OilSeparation" ObjectId="4c666ef1-d5a7-40b7-ab7d-6ad6b383d6e2">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <localVars>
                  <variable name="Biestable_RS_hysteresis">
                    <type>
                      <derived name="RS" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <FBD>
                  <vendorElement localId="10000000000">
                    <position x="0" y="0" />
                    <alternativeText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">FBD Implementation Attributes</xhtml>
                    </alternativeText>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbd/implementationattributes" handleUnknown="implementation">
                        <fbdattributes xmlns="">
                          <attribute name="BoxInputFlagsSupported" value="true" />
                        </fbdattributes>
                      </data>
                    </addData>
                  </vendorElement>
                  <inVariable localId="10000000001">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bGlobalError</expression>
                  </inVariable>
                  <inVariable localId="10000000002">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bOilSeparationLevelMax</expression>
                  </inVariable>
                  <inVariable localId="10000000003">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bTankLevelNominal</expression>
                  </inVariable>
                  <inVariable localId="10000000004">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>fTankTemperature</expression>
                  </inVariable>
                  <inVariable localId="10000000005">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>35</expression>
                  </inVariable>
                  <block localId="10000000006" typeName="GE">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="In1">
                        <connectionPointIn>
                          <connection refLocalId="10000000004" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In2">
                        <connectionPointIn>
                          <connection refLocalId="10000000005" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Out1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">operator</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="" />
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <inVariable localId="10000000007">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>fTankTemperature</expression>
                  </inVariable>
                  <inVariable localId="10000000008">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>33</expression>
                  </inVariable>
                  <block localId="10000000009" typeName="LT">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="In1">
                        <connectionPointIn>
                          <connection refLocalId="10000000007" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In2">
                        <connectionPointIn>
                          <connection refLocalId="10000000008" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Out1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">operator</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="" />
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <block localId="10000000010" typeName="RS" instanceName="Biestable_RS_hysteresis">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="SET">
                        <connectionPointIn>
                          <connection refLocalId="10000000006" formalParameter="Out1" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="RESET1">
                        <connectionPointIn>
                          <connection refLocalId="10000000009" formalParameter="Out1" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL BOOL</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <block localId="10000000011" typeName="AND">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="In1" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="10000000001" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In2" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="10000000002" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In3" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="10000000003" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In4">
                        <connectionPointIn>
                          <connection refLocalId="10000000010" formalParameter="Q1" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Out1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">operator</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="" />
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <outVariable localId="10000000012">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="10000000011" formalParameter="Out1" />
                    </connectionPointIn>
                    <expression>OilSeparation</expression>
                  </outVariable>
                </FBD>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CtrlTankHeater" ObjectId="ed662f75-8781-4c4a-8ad5-0ceeb4fd56dd">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="fTankTemperature">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="fTemperatureLimitLower">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="fTemperatureLimitUpper">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="nTankTemperature">
                    <type>
                      <INT />
                    </type>
                  </variable>
                  <variable name="nTemperatureLimitLower">
                    <type>
                      <INT />
                    </type>
                  </variable>
                  <variable name="nTemperatureLimitUpper">
                    <type>
                      <INT />
                    </type>
                  </variable>
                  <variable name="fConversionFactor">
                    <type>
                      <REAL />
                    </type>
                    <initialValue>
                      <simpleValue value="100" />
                    </initialValue>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// convert real to int with conversion factor
nTankTemperature 		:= REAL_TO_INT(fTankTemperature * fConversionFactor);
nTemperatureLimitLower 	:= REAL_TO_INT(fTemperatureLimitLower * fConversionFactor);
nTemperatureLimitUpper 	:= REAL_TO_INT(fTemperatureLimitUpper * fConversionFactor);

hysteresis(
	IN := nTankTemperature,
	HIGH := nTemperatureLimitUpper,
	LOW := nTemperatureLimitLower,
	OUT =&gt; CtrlTankHeater
);</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Working" ObjectId="1172bdf3-9259-4d40-bc1c-3e3bb9210277">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToOperational">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// control tank heater in hysteresis in automatic mode
bSetStatusOnTankHeater := CtrlTankHeater(
	fTankTemperature := tankTempSensor.fValue,
	fTemperatureLimitLower := fSetPoint - fTankHeaterHysteresisWidth / 2,
	fTemperatureLimitUpper := fSetPoint + fTankHeaterHysteresisWidth / 2
);
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetSetPointLimits" ObjectId="fe8a7f25-f7d4-41e5-93ec-f671b6cafa07">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <localVars>
                  <variable name="fTemperatureLimitLower">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="fTemperatureLimitUpper">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE systemState.nOperatingState OF
	E_SystemOperatingState.standby, E_SystemOperatingState.rampUp, E_SystemOperatingState.rampDown:
		fTemperatureLimitLower := fTemperatureLimitLowerCritical + fTankHeaterHysteresisWidth / 2;
		fTemperatureLimitUpper := fTemperatureLimitUpperCritical - fTankHeaterHysteresisWidth / 2;
	E_SystemOperatingState.operational, E_SystemOperatingState.working:
		fTemperatureLimitLower := fTemperatureLimitLowerWorking + fTankHeaterHysteresisWidth / 2;
		fTemperatureLimitUpper := fTemperatureLimitUpperWorking - fTankHeaterHysteresisWidth / 2;
END_CASE

aSetPointLimits[1] := fTemperatureLimitLower;
aSetPointLimits[2] := fTemperatureLimitUpper;
setPointState.aSetPointLimits := aSetPointLimits;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetStates" ObjectId="03d9dfa2-b793-4413-accc-3711f02dfd67">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set control state
controlState.bStatusOn := bStatusOn;

// set set point state
setPointState.aSetPointLimits 		:= aSetPointLimits;
setPointState.fSetPoint 			:= fSetPoint;
setPointState.fOperatingPoint 		:= fOperatingPoint;
setPointState.sSetPointUnit 		:= 'degreeC';
setPointState.sOperatingPointUnit 	:= 'degreeC';

// set local state
localState.bTankHeatingOn						:= tankHeater.bStatusOn;
localState.bSupplyFreshWaterOn					:= bSupplyFreshWaterOn;
localState.bOilSeparationOn 					:= bOilSeparationOn;
localState.fTankTemperature 					:= fTankTemperature;
localState.bFilterMonitor 						:= bFilterMonitor;
localState.bTankLevelMin 						:= bTankLevelMin;
localState.bTankLevelNominal					:= bTankLevelNominal;
localState.bTankLevelMax						:= bTankLevelMax;
localState.bOilSeparationLevelMax 				:= bOilSeparationLevelMax;
localState.bDemineralOk 						:= bDemineralOk;
localState.fTankHeaterHysteresisWidth 			:= fTankHeaterHysteresisWidth;
localState.fTemperatureLimitLowerWorking 		:= fTemperatureLimitLowerWorking;
localState.fTemperatureLimitUpperWorking 		:= fTemperatureLimitUpperWorking;
localState.fTemperatureLimitLowerCritical 		:= fTemperatureLimitLowerCritical;
localState.fTemperatureLimitUpperCritical 		:= fTemperatureLimitUpperCritical;
localState.sTemperatureUnit						:= 'degreeC';
localState.fCleaningFluidSpecificHeatCapacity	:= 4190;
localState.sCleaningFluidSpecificHeatCapacityUnit := 'J/(kg*K)';
localState.fCleaningFluidDensity				:= 1000;
localState.sCleaningFluidDensityUnit			:= 'kg/m^3';
localState.fTankVolume							:= 0.320;
localState.sTankVolumeUnit						:= 'm^3';

// set store energy inherently state
storeEnergyInherentlyState.fNominalLoad 			:= 10000;
storeEnergyInherentlyState.sPowerUnit				:= 'W';
storeEnergyInherentlyState.sMachineStateCorrelation := 'standby, operational, working';
storeEnergyInherentlyState.sProcessStepCorrelation 	:= 'sprayCleaning; dripping; suction; blowing; convectionDrying; homing';
storeEnergyInherentlyState.bOperatingPoint			:= tankHeater.bStatusOn;
storeEnergyInherentlyState.fProcessValue			:= fTankTemperature;
storeEnergyInherentlyState.aFlexibilityLimits		:= setPointState.aSetPointLimits;
storeEnergyInherentlyState.sProcessValueUnit		:= 'degreeC';</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckAlgorithmPermission" ObjectId="a37f548c-d691-4513-8890-d7ec7177b2f6">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="fTemperatureOffset">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// give algorithm permission to control tank heater if temperature is inside the limits
IF (
	bAlgorithmPermissionTankHeater AND 
	(aSetPointLimits[1] &lt;= tankTempSensor.fValue) AND 
	(tankTempSensor.fValue &lt;= aSetPointLimits[2]) AND 
	NOT bGlobalError
) THEN
	bAlgorithmPermissionTankHeater := TRUE;
// if permission is denied reset permission if inside the limits with offset
ELSIF (
	NOT bAlgorithmPermissionTankHeater AND 
	(aSetPointLimits[1] + fTemperatureOffset &lt;= tankTempSensor.fValue) AND 
	(tankTempSensor.fValue &lt;= aSetPointLimits[2] - fTemperatureOffset) AND 
	NOT bGlobalError
) THEN
	bAlgorithmPermissionTankHeater := TRUE;
ELSE
	bAlgorithmPermissionTankHeater := FALSE;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Standby" ObjectId="73cf30e1-6566-4a0b-a59a-b2f5ad779a18">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">bSetStatusOnTankHeater 	:= FALSE;
bSupplyFreshWaterOn		:= FALSE;
bOilSeparationOn		:= FALSE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>958bf47a-7bcb-4976-be51-b08c5273ea83</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_SystemContinous" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="systemState">
              <type>
                <derived name="ST_SystemState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_ActorContinous</Extends>
                <Implements>ITF_System</Implements>
                <Implements>ITF_ActorContinous</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="MAIN" ObjectId="0f6296ee-45f5-4e45-b70e-a6b0f33b8461">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^.MAIN();
SystemFlowControl();</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SystemFlowControl" ObjectId="6217cbf4-0afa-43b2-8f55-e14926bb4551">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CheckError(bError =&gt; bSystemError);
systemState.bError := bSystemError;

IF NOT bSystemError THEN
	CASE nState OF
		E_SystemOperatingState.standby:
			systemState.sOperatingState := 'standby';
			bSwitchState := FALSE;
			Standby();
			//if turned on switch to ramp-up
			IF(bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampUp;
			END_IF
		E_SystemOperatingState.rampUp:
			systemState.sOperatingState := 'ramp-up';
			RampUp(bRampUpFinished =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//if ramp-up finished switch to operational
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.operational;
			END_IF
		E_SystemOperatingState.operational:
			systemState.sOperatingState := 'operational';
			Operational(bSwitchToWorking =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//switch to working if desired
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.working;
			END_IF
		E_SystemOperatingState.working:
			systemState.sOperatingState := 'working';
			Working(bSwitchToOperational =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//switch to operational if desired
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.operational;
			END_IF
		E_SystemOperatingState.rampDown:
			systemState.sOperatingState := 'ramp-down';
			RampDown(bRampDownFinished =&gt; bSwitchState);
			//if turned on switch to ramp-up
			IF(bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampUp;
			//if ramp-down finished switch to standby
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.standby;
			END_IF
	END_CASE
ELSE
	RampDown(bRampDownFinished =&gt; bSwitchState);
	IF bSwitchState THEN
		systemState.sOperatingState := 'standby';
		nState := E_SystemOperatingState.standby;
	ELSE
		systemState.sOperatingState := 'ramp-down';	
		nState := E_SystemOperatingState.rampDown;		
	END_IF
	
END_IF
systemState.nOperatingState := nState;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetSetPointLimits" ObjectId="c9b7018e-3d3b-4300-a0ff-a7594c0a9418">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="0b9322cf-e70a-4690-99c5-93a49a2aa482">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">bError := FALSE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Operational" ObjectId="b67d22fb-b8a1-4acb-81b9-dca13c100aa8">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToWorking">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bSwitchToWorking := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampDown" ObjectId="89229a8c-6f58-44ae-b9f0-81b09c033393">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampDownFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bRampDownFinished := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampUp" ObjectId="d9924ef1-5ccd-4d86-9b3d-d3f147fbce70">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampUpFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bRampUpFinished := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Working" ObjectId="47a9a748-1dfd-446c-ada1-d5234d717177">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToOperational">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation is empty such that system stays in working</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Standby" ObjectId="0a54e910-0d7e-4490-ba5b-d25d949d0b58">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation is empty</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>997f558e-7533-4f7d-83f7-91e1632805dd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_InletAirHeatingSystem" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="bGlobalError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bResetErrors">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="bAirSupplyFlowOk">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> safety sensor</xhtml>
              </documentation>
            </variable>
            <variable name="bInletAirHeaterOn">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> state of heating</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="inletAirHeater">
              <type>
                <derived name="FB_Actor2Point" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> actors</xhtml>
              </documentation>
            </variable>
            <variable name="bInletAirFanOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bOpenInletAirShutOffValve">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="airSupplyTempSensor">
              <type>
                <derived name="ST_TempSensorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> sensors</xhtml>
              </documentation>
            </variable>
            <variable name="bInletAirShutOffValveOpen">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bInletAirShutOffValveClosed">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bAirSupplyTempSensorOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="errorState">
              <type>
                <derived name="ST_InletAirHeatingErrorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> states</xhtml>
              </documentation>
            </variable>
            <variable name="localState">
              <type>
                <derived name="ST_InletAirHeatingState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="storeEnergyInherentlyState">
              <type>
                <derived name="ST_StoreEnergyInherentlyState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fAirSupplyTemperature">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> internal variables</xhtml>
              </documentation>
            </variable>
            <variable name="fTemperatureLimitLowerCritical">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="fTemperatureLimitUpperCritical">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="150" />
              </initialValue>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_SystemContinous</Extends>
                <Implements>ITF_System</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">MAIN();
ReadInputs();

// instantiate inlet air heater
inletAirHeater(bAlgorithmPermission := NOT CheckError());
bInletAirHeaterOn := inletAirHeater.bStatusOn;

// read air supply temperature
PRG_AnalogInputs(airSupplyTempSensor =&gt; airSupplyTempSensor);
fAirSupplyTemperature := airSupplyTempSensor.fValue;

// set states
SetStates();

SetOutputs();</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetOutputs" ObjectId="dccab24f-c021-4397-a9e6-2801fbdcf97b">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set ouputs
outputs.bOpenInletAirShutOffValve 	:= bOpenInletAirShutOffValve;
outputs.bInletAirFanOn 				:= bInletAirFanOn;
outputs.bInletAirHeaterOn			:= inletAirHeater.bStatusOn;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadInputs" ObjectId="0d5075bc-9f54-4640-b8cc-2298fe21e402">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// read inputs
bInletAirShutOffValveOpen 	:= inputs.bInletAirShutOffValveOpen;
bInletAirShutOffValveClosed := inputs.bInletAirShutOffValveClosed;
bAirSupplyTempSensorOk		:= inputs.bAirSupplyTempSensorOk;
bAirSupplyFlowOk 			:= inputs.bAirSupplyFlowOk;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetSetPointLimits" ObjectId="663ad436-8072-4027-a2c6-d865489606d9">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">aSetPointLimits[1] := fTemperatureLimitLowerCritical;
aSetPointLimits[2] := fTemperatureLimitUpperCritical;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="64dea345-640b-46dd-aca2-10a4a4d4a9e7">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// error if inlet air shut off valve doesn't open in 5 seconds
T1(
	IN := (bOpenInletAirShutOffValve AND NOT bInletAirShutOffValveOpen) OR (bOpenInletAirShutOffValve AND bInletAirShutOffValveClosed),
	PT := T#5S
);
S1(SET1 := T1.Q, RESET := bResetErrors, Q1 =&gt; errorState.bInletAirShutOffValveOpeningError);

// error if inlet air shut off valve doesn't close in 5 seconds
T2(
	IN := (NOT bOpenInletAirShutOffValve AND NOT bInletAirShutOffValveClosed) OR (NOT bOpenInletAirShutOffValve AND bInletAirShutOffValveOpen),
	PT := T#5S
);
S2(SET1 := T2.Q, RESET := bResetErrors, Q1 =&gt; errorState.bInletAirShutOffValveClosingError);

// error if inlet air shut off valve sensors are both true
T3(
	IN := (bInletAirShutOffValveClosed AND bInletAirShutOffValveOpen),
	PT := T#1S
);
S3(SET1 := T3.Q, RESET := bResetErrors, Q1 =&gt; errorState.bInletAirShutOffValveSensorsError);

// error if air supply temperature sensor is in error
T4(IN := NOT bAirSupplyTempSensorOk, PT := T#1S);
S4(SET1 := T4.Q, RESET := bResetErrors, Q1 =&gt; errorState.bAirSupplyTempSensorError);

// error if inlet air supply is not ok in 20 seconds
T5(IN := (bInletAirFanOn AND NOT bAirSupplyFlowOk), PT := T#20S);
S5(SET1 := T5.Q, RESET := bResetErrors, Q1 =&gt; errorState.bInletAirFanError);
	
// check air temperature
T6(IN := (fAirSupplyTemperature &lt; fTemperatureLimitLowerCritical), PT := T#1S);
S6(SET1 := T6.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorAirTemperatureCriticalLow);

T7(IN := (fAirSupplyTemperature &gt; fTemperatureLimitUpperCritical), PT := T#1S);
S7(SET1 := T6.Q, RESET := bResetErrors, Q1 =&gt; errorState.bErrorAirTemperatureCriticalHigh);

bError := (
	errorState.bInletAirShutOffValveOpeningError OR 
	errorState.bInletAirShutOffValveClosingError OR
	errorState.bInletAirShutOffValveSensorsError OR
	//errorState.bAirSupplyTempSensorError OR
	errorState.bInletAirFanError OR 
	errorState.bErrorAirTemperatureCriticalLow OR 
	errorState.bErrorAirTemperatureCriticalHigh
);
CheckError := bError;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampDown" ObjectId="b710e724-4a82-4f0a-a781-d043734a91a0">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampDownFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">inletAirHeater(bSetStatusOnAutomatic :=FALSE);
bInletAirFanOn :=FALSE;

IF NOT bAirSupplyFlowOk THEN
	bOpenInletAirShutOffValve := FALSE;
END_IF

IF NOT bInletAirShutOffValveOpen AND NOT bAirSupplyFlowOk THEN
	bRampDownFinished := TRUE;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampUp" ObjectId="0ebe378d-3902-4f8d-8412-07234300eccf">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampUpFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">bOpenInletAirShutOffValve := TRUE;

IF bInletAirShutOffValveOpen THEN
	bInletAirFanOn :=TRUE;
END_IF

IF bInletAirShutOffValveOpen AND bAirSupplyFlowOk THEN
	bRampUpFinished := TRUE;
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Working" ObjectId="f1385d70-4aed-446f-a7dc-6f4bdc585089">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToOperational">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF bInletAirShutOffValveOpen AND bAirSupplyFlowOk AND (fAirSupplyTemperature &lt;= (fSetPoint - 5)) THEN
	inletAirHeater(bSetStatusOnAutomatic :=TRUE);
END_IF
		
IF NOT bInletAirShutOffValveOpen OR NOT bAirSupplyFlowOk OR (fAirSupplyTemperature &gt;= fSetPoint)THEN
	inletAirHeater(bSetStatusOnAutomatic :=FALSE);
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetStates" ObjectId="4302151a-07be-4b35-aad9-518dacd73821">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set control state
controlState.bStatusOn := bStatusOn;

// set set point state
setPointState.aSetPointLimits 		:= aSetPointLimits;
setPointState.fSetPoint 			:= fSetPoint;
setPointState.fOperatingPoint 		:= fOperatingPoint;
setPointState.sSetPointUnit 		:= 'degreeC';
setPointState.sOperatingPointUnit 	:= 'degreeC';

// set local state
localState.fAirSupplyTemperature 			:= fAirSupplyTemperature;
localState.bInletAirShutOffValveOpen		:= bInletAirShutOffValveOpen;
localState.bInletAirShutOffValveClosed		:= bInletAirShutOffValveClosed;
localState.bAirSupplyTempOk					:= bAirSupplyTempSensorOk;
localState.bAirSupplyFlowOk					:= bAirSupplyFlowOk;
localState.fTemperatureLimitLowerCritical	:= fTemperatureLimitLowerCritical;
localState.fTemperatureLimitUpperCritical	:= fTemperatureLimitUpperCritical;
localState.bInletAirFanStatusOn				:= bInletAirFanOn;

// set store energy inherently state
storeEnergyInherentlyState.fNominalLoad 			:= 8;
storeEnergyInherentlyState.sPowerUnit				:= 'kW';
storeEnergyInherentlyState.sMachineStateCorrelation := 'working';
storeEnergyInherentlyState.sProcessStepCorrelation 	:= 'convectionDrying';</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Standby" ObjectId="8620aaef-6d67-4ba8-8db4-51fdcc62f700">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// turn everything off
inletAirHeater(bSetStatusOnAutomatic :=FALSE);
bOpenInletAirShutOffValve 	:= FALSE;
bInletAirFanOn				:= FALSE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e26f411d-315a-4ff7-ae6a-6684407a01b9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_CleaningChamberSystem" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="bGlobalError">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bResetErrors">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="tMaxDurationExhaustFanOn">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="bPumpSupplyOn">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> actors</xhtml>
              </documentation>
            </variable>
            <variable name="bRotationBasketEnable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bRotationBasketDirectionOfRotation">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bRotationNoozleFrameEnable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bExhaustAirFanOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bBlastNoozleTopOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bBlastNoozleBottomOn">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="bBasketHomed">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> sensors</xhtml>
              </documentation>
            </variable>
            <variable name="bNoozleFrameHomed">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bDoorClosed">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bMotorsDrivesOk">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="bDoorLoadingSafetyOk">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="systemState">
              <type>
                <derived name="ST_SystemState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> states</xhtml>
              </documentation>
            </variable>
            <variable name="localState">
              <type>
                <derived name="ST_CleaningChamberState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="errorState">
              <type>
                <derived name="ST_CleaningChamberErrorState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="bOpenProtectiveDoorLoading">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> local</xhtml>
              </documentation>
            </variable>
            <variable name="tonOpenDoorDelay">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="srOpenDoorDelay">
              <type>
                <derived name="SR" />
              </type>
            </variable>
            <variable name="bDoorOpen">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">ReadInputs();
CheckError(bError =&gt; systemState.bError);
// delay of open door
srOpenDoorDelay(SET1 := bDoorOpen, RESET := tonOpenDoorDelay.Q, Q1 =&gt; bOpenProtectiveDoorLoading);
tonOpenDoorDelay(IN := bOpenProtectiveDoorLoading, PT := T#2S);
ExhaustFanIfDoorOpen();

SetStates();
SetOutputs();</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CtrlBlastNoozles" ObjectId="e16c094a-e35b-43db-8c31-5bce0941decf">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="tBlastNoozlesPulseDuration">
                    <type>
                      <TIME />
                    </type>
                  </variable>
                  <variable name="tBlastNoozlesPulsePeriod">
                    <type>
                      <TIME />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="bBlastNoozleBottomOn">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bBlastNoozleTopOn">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <FBD>
                  <vendorElement localId="10000000000">
                    <position x="0" y="0" />
                    <alternativeText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">FBD Implementation Attributes</xhtml>
                    </alternativeText>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbd/implementationattributes" handleUnknown="implementation">
                        <fbdattributes xmlns="">
                          <attribute name="BoxInputFlagsSupported" value="true" />
                        </fbdattributes>
                      </data>
                    </addData>
                  </vendorElement>
                  <inVariable localId="10000000001">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bHelpSignal1</expression>
                  </inVariable>
                  <inVariable localId="10000000002">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bDoorClosed</expression>
                  </inVariable>
                  <inVariable localId="10000000003">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bGlobalError</expression>
                  </inVariable>
                  <block localId="10000000004" typeName="AND">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="In1">
                        <connectionPointIn>
                          <connection refLocalId="10000000001" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In2">
                        <connectionPointIn>
                          <connection refLocalId="10000000002" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In3" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="10000000003" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Out1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">operator</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="" />
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <inVariable localId="10000000005">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>tBlastNoozlesPulsePeriod/2</expression>
                  </inVariable>
                  <block localId="10000000006" typeName="TON" instanceName="T11">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="IN">
                        <connectionPointIn>
                          <connection refLocalId="10000000004" formalParameter="Out1" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="PT">
                        <connectionPointIn>
                          <connection refLocalId="10000000005" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                      <variable formalParameter="ET">
                        <connectionPointOut>
                          <expression />
                        </connectionPointOut>
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL TIME</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL TIME</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <outVariable localId="10000000007">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="10000000006" formalParameter="Q" />
                    </connectionPointIn>
                    <expression>bHelpSignal2</expression>
                  </outVariable>
                  <inVariable localId="20000000000">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bHelpSignal2</expression>
                  </inVariable>
                  <inVariable localId="20000000001">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bDoorClosed</expression>
                  </inVariable>
                  <inVariable localId="20000000002">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bGlobalError</expression>
                  </inVariable>
                  <block localId="20000000003" typeName="AND">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="In1" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="20000000000" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In2">
                        <connectionPointIn>
                          <connection refLocalId="20000000001" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="In3" negated="true">
                        <connectionPointIn>
                          <connection refLocalId="20000000002" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Out1">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">operator</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="" />
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <inVariable localId="20000000004">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>tBlastNoozlesPulsePeriod/2</expression>
                  </inVariable>
                  <block localId="20000000005" typeName="TON" instanceName="T12">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="IN">
                        <connectionPointIn>
                          <connection refLocalId="20000000003" formalParameter="Out1" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="PT">
                        <connectionPointIn>
                          <connection refLocalId="20000000004" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                      <variable formalParameter="ET">
                        <connectionPointOut>
                          <expression />
                        </connectionPointOut>
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL TIME</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL TIME</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <outVariable localId="20000000006">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="20000000005" formalParameter="Q" />
                    </connectionPointIn>
                    <expression>bHelpSignal1</expression>
                  </outVariable>
                  <outVariable localId="20000000007">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="20000000005" formalParameter="Q" />
                    </connectionPointIn>
                    <expression>bBlinkSignal</expression>
                  </outVariable>
                  <inVariable localId="30000000000">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>bBlinkSignal</expression>
                  </inVariable>
                  <block localId="30000000001" typeName="R_TRIG" instanceName="RisingEdge">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="CLK">
                        <connectionPointIn>
                          <connection refLocalId="30000000000" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <inVariable localId="30000000002">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>tBlastNoozlesPulseDuration</expression>
                  </inVariable>
                  <block localId="30000000003" typeName="TP" instanceName="TP1">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="IN">
                        <connectionPointIn>
                          <connection refLocalId="30000000001" formalParameter="Q" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="PT">
                        <connectionPointIn>
                          <connection refLocalId="30000000002" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                      <variable formalParameter="ET">
                        <connectionPointOut>
                          <expression />
                        </connectionPointOut>
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL TIME</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL TIME</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <outVariable localId="30000000004">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="30000000003" formalParameter="Q" />
                    </connectionPointIn>
                    <expression>bBlastNoozleBottomOn</expression>
                  </outVariable>
                  <block localId="30000000005" typeName="F_TRIG" instanceName="FallingEdge">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="CLK">
                        <connectionPointIn>
                          <connection refLocalId="30000000000" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <inVariable localId="30000000006">
                    <position x="0" y="0" />
                    <connectionPointOut />
                    <expression>tBlastNoozlesPulseDuration</expression>
                  </inVariable>
                  <block localId="30000000007" typeName="TP" instanceName="TP2">
                    <position x="0" y="0" />
                    <inputVariables>
                      <variable formalParameter="IN">
                        <connectionPointIn>
                          <connection refLocalId="30000000005" formalParameter="Q" />
                        </connectionPointIn>
                      </variable>
                      <variable formalParameter="PT">
                        <connectionPointIn>
                          <connection refLocalId="30000000006" />
                        </connectionPointIn>
                      </variable>
                    </inputVariables>
                    <inOutVariables />
                    <outputVariables>
                      <variable formalParameter="Q">
                        <connectionPointOut />
                      </variable>
                      <variable formalParameter="ET">
                        <connectionPointOut>
                          <expression />
                        </connectionPointOut>
                      </variable>
                    </outputVariables>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                        <CallType xmlns="">functionblock</CallType>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                        <InputParamTypes xmlns="">BOOL TIME</InputParamTypes>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                        <OutputParamTypes xmlns="">BOOL TIME</OutputParamTypes>
                      </data>
                    </addData>
                  </block>
                  <outVariable localId="30000000008">
                    <position x="0" y="0" />
                    <connectionPointIn>
                      <connection refLocalId="30000000007" formalParameter="Q" />
                    </connectionPointIn>
                    <expression>bBlastNoozleTopOn</expression>
                  </outVariable>
                </FBD>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="56cf6b1d-208d-4ad8-9deb-c817399732a5">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">S1(SET1 := NOT bMotorsDrivesOk, RESET := bResetErrors, Q1 =&gt; errorState.bMotorsDrivesError);
S2(SET1 := NOT bDoorLoadingSafetyOk, RESET := bResetErrors, Q1 =&gt; errorState.bDoorLoadingSafetyError);

bError := errorState.bMotorsDrivesError OR errorState.bDoorLoadingSafetyError;
CheckError := bError;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="OpenDoor" ObjectId="0b4e1e55-5a41-4c72-af7d-2f68744f3831">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bOpenDoor">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bInletAirHeaterOnStatus">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="nActiveState">
                    <type>
                      <derived name="E_SystemOperatingState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_SystemOperatingState.working" />
                    </initialValue>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF(	
	bOpenDoor AND
	nActiveState &lt;&gt; E_SystemOperatingState.working AND
	bEmergencyStopOk AND
	NOT bInletAirHeaterOnStatus AND
	NOT bPumpSupplyOn AND
	NOT bRotationBasketEnable AND
	NOT bRotationNoozleFrameEnable AND
	NOT bBlastNoozleBottomOn AND
	NOT bBlastNoozleTopOn
) THEN
	bDoorOpen := TRUE;
ELSE
	bDoorOpen 			:= FALSE;
	bExhaustAirFanOn	:= FALSE;
END_IF;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ExhaustFanIfDoorOpen" ObjectId="9d413a32-629b-4afc-8b6b-b5a71ecf16fb">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <localVars>
                  <variable name="bStartExhaustFan">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set bStartExhaustFan if door is open, reset bStartExhaustFan if door is closed
IF bDoorClosed THEN
	bStartExhaustFan := FALSE;
ELSE
	bStartExhaustFan := TRUE;
END_IF

T1(IN := bStartExhaustFan, PT := tMaxDurationExhaustFanOn);

// operate exhaust fan for tMaxDurationExhaustFanOn if door is open
IF NOT bDoorClosed THEN
	bExhaustAirFanOn := NOT T1.Q;
END_IF
</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetStates" ObjectId="f4596b15-8632-42ba-82a1-5c3b28ae5942">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set system state
IF(
	bPumpSupplyOn OR
	bRotationBasketEnable OR
	bRotationBasketDirectionOfRotation OR
	bRotationNoozleFrameEnable OR
	bExhaustAirFanOn OR
	bBlastNoozleTopOn OR
	bBlastNoozleBottomOn OR
	bOpenProtectiveDoorLoading
) THEN
	systemState.nOperatingState := E_SystemOperatingState.working;
	systemState.sOperatingState := 'working';
ELSE
	systemState.nOperatingState := E_SystemOperatingState.operational;
	systemState.sOperatingState := 'operational';
END_IF

// set local state
localState.bPumpSupplyStatusOn 					:= bPumpSupplyOn;
localState.bRotationBasketStatusOn 				:= bRotationBasketEnable;
localState.bRotationBasketDirectionOfRotation 	:= bRotationBasketDirectionOfRotation;
localState.bRotationNoozleFrameStatusOn 		:= bRotationNoozleFrameEnable;
localState.bExhaustAirFanStatusOn 				:= bExhaustAirFanOn;
localState.bBlastNoozleTopStatusOn				:= bBlastNoozleTopOn;
localState.bBlastNoozleBottomStatusOn			:= bBlastNoozleBottomOn;
localState.bProtectiveDoorLoadingOpen			:= NOT bDoorClosed;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadInputs" ObjectId="35d6d73c-0589-4ff4-92ff-c8283803087a">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">bBasketHomed 			:= inputs.bBasketHomed;
bNoozleFrameHomed 		:= inputs.bNoozleFrameHomed;
bDoorClosed				:= inputs.bDoorClosed;
bMotorsDrivesOk 		:= inputs.bMotorsDrivesOk;
bDoorLoadingSafetyOk	:= inputs.bDoorLoadingSafetyOk;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetOutputs" ObjectId="2fb7a947-8a2b-4814-b393-ff0621252bdf">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// set outputs
outputs.bPumpSupplyOn 						:= bPumpSupplyOn;
outputs.bRotationBasketEnable 				:= bRotationBasketEnable;
outputs.bRotationBasketDirectionOfRotation 	:= bRotationBasketDirectionOfRotation;
outputs.bRotationNoozleFrameEnable 			:= bRotationNoozleFrameEnable;
outputs.bExhaustAirFanOn 					:= bExhaustAirFanOn;
outputs.bBlastNoozleTopOn 					:= bBlastNoozleTopOn;
outputs.bBlastNoozleBottomOn 				:= bBlastNoozleBottomOn;
outputs.bOpenProtectiveDoorLoading			:= bOpenProtectiveDoorLoading;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8ea84711-af10-4bb8-8e38-5e6c4d78f9d3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_System2Point" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="systemState">
              <type>
                <derived name="ST_SystemState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="symbol" Value="readwrite" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_Actor2Point</Extends>
                <Implements>ITF_System</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="symbol" Value="none" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampDown" ObjectId="20bc3486-a275-474c-9da9-e5dde4878b93">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampDownFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bRampDownFinished := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Operational" ObjectId="40f52629-7661-4750-85af-bd0dccba9b5e">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToWorking">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bSwitchToWorking := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="CheckError" ObjectId="6ba55b69-52b6-485f-b1ae-be8703bd3738">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">bError := FALSE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Working" ObjectId="109d1e22-3004-4bdd-bd0e-bab2c2441a5f">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bSwitchToOperational">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation is empty such that system stays in working</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="RampUp" ObjectId="a76810a1-1a19-4f6f-aceb-27c6ebd774f8">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <outputVars>
                  <variable name="bRampUpFinished">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation sets ouput true such that this step is skipped
bRampUpFinished := TRUE;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="MAIN" ObjectId="fbd33b7a-76f7-485f-8f95-be2eb8ca4cd1">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">SelectControlMode();
SystemFlowControl();</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SystemFlowControl" ObjectId="a99f9330-87c6-4dd3-b369-bbe3c0f2de7b">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CheckError(bError =&gt; bSystemError);
systemState.bError := bSystemError;

IF NOT bSystemError THEN
	CASE nState OF
		E_SystemOperatingState.standby:
			systemState.sOperatingState := 'standby';
			bSwitchState := FALSE;
			Standby();
			//if turned on switch to ramp-up
			IF(bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampUp;
			END_IF
		E_SystemOperatingState.rampUp:
			systemState.sOperatingState := 'ramp-up';
			RampUp(bRampUpFinished =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//if ramp-up finished switch to operational
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.operational;
			END_IF
		E_SystemOperatingState.operational:
			systemState.sOperatingState := 'operational';
			Operational(bSwitchToWorking =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//switch to working if desired
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.working;
			END_IF
		E_SystemOperatingState.working:
			systemState.sOperatingState := 'working';
			Working(bSwitchToOperational =&gt; bSwitchState);
			//if turned off switch to ramp-down
			IF(NOT bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampDown;
			//switch to operational if desired
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.operational;
			END_IF
		E_SystemOperatingState.rampDown:
			systemState.sOperatingState := 'ramp-down';
			RampDown(bRampDownFinished =&gt; bSwitchState);
			//if turned on switch to ramp-up
			IF(bSetStatusOn) THEN
				nState := E_SystemOperatingState.rampUp;
			//if ramp-down finished switch to standby
			ELSIF(bSwitchState) THEN
				nState := E_SystemOperatingState.standby;
			END_IF
	END_CASE
ELSE
	RampDown(bRampDownFinished =&gt; bSwitchState);
	IF bSwitchState THEN
		systemState.sOperatingState := 'standby';
		nState := E_SystemOperatingState.standby;
	ELSE
		systemState.sOperatingState := 'ramp-down';	
		nState := E_SystemOperatingState.rampDown;		
	END_IF
	
END_IF
systemState.nOperatingState := nState;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Standby" ObjectId="c81ebc94-a01b-4121-8298-c67697513439">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// basic implementation is empty</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c0351a81-0a1b-4a59-9278-4d72daf11bc8</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="outputs">
        <variable name="bCPU_OK" address="%QX10.0">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Immer - Immer EINS, da Rexroth Steuerung keine Verbindung zum HMI hat</xhtml>
          </documentation>
        </variable>
        <variable name="bTankHeatingOn" address="%QX10.1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung - EIN wenn Tanktemperatur &lt;= (Solltemp_Tank -2) - NULL wenn Tanktemperatur &gt;= Solltemp_Tank</xhtml>
          </documentation>
        </variable>
        <variable name="bPumpSupplyOn" address="%QX10.2">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Spritzpumpe, Freigabe: Keine Stoerung und Besch_Tuer_Gesch - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bSupplyFreshWaterOn" address="%QX10.3">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung - EIN wenn (Schritt==0) UND (Sollniveau==Nachtanken=EINS)</xhtml>
          </documentation>
        </variable>
        <variable name="bOilSeparationOn" address="%QX10.4">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und Oelabsch_Niveau==NULL und Niveau_Soll==0 - EIN während Reinigungsprogramm, ggf. mit Nachlauf - Beachte: Bei kalten Wasser und Chemiezusatz Schaumentwicklung, ggf. nur über 35°C betreiben (Temp.schaltpunkt mit Hysterese belegen)</xhtml>
          </documentation>
        </variable>
        <variable name="bRotationBasketEnable" address="%QX10.5">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und Besch_Tuer_Gesch - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bRotationBasketDirectionOfRotation" address="%QX10.6">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Immer - EIN wenn von Schrittkette benötigt wird - NULL wenn von Schrittkette benötigt wird</xhtml>
          </documentation>
        </variable>
        <variable name="bRotationNoozleFrameEnable" address="%QX10.7">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und Besch_Tuer_Gesch - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bOpenProtectiveDoorLoading" address="%QX11.0">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Kein Not-Halt - EIN wenn (Schritt==0) UND (Tuertaster==EINS)</xhtml>
          </documentation>
        </variable>
        <variable name="bExhaustAirFanOn" address="%QX11.1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0 UND Besch_Tuer_Gesch</xhtml>
          </documentation>
        </variable>
        <variable name="bInletAirFanOn" address="%QX11.2">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bOpenInletAirShutOffValve" address="%QX11.3">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bInletAirHeaterOn" address="%QX11.4">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bBlastNoozleTopOn" address="%QX11.5">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird; s. Pulssteuerung - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <variable name="bBlastNoozleBottomOn" address="%QX11.6">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Freigabe: Keine Stoerung und bDoorClosed - EIN wenn von Schrittkette benötigt wird; s. Pulssteuerung - NULL wenn Schritt== 0</xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d5aea26c-4a07-4dcb-bc54-4dfc0e8b9c1e</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="inputs">
        <variable name="bStartButton" address="%IX0.1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EINS wenn gedrückt</xhtml>
          </documentation>
        </variable>
        <variable name="bFilterMonitor" address="%IX10.0">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Warnung wenn NULL und Spritzpumpe EIN - Verzoegerung 10 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bTankLevelMin_NOT" address="%IX10.1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 3 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bTankLevelNominal_NOT" address="%IX10.2">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">NULL: Niveau OK; EINS: Nachtanken</xhtml>
          </documentation>
        </variable>
        <variable name="bTankLevelMax_NOT" address="%IX10.3">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 3 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bOilSeparationLevelMax" address="%IX10.4">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Warnung wenn EINS - Verzoegerung 10 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bBasketHomed" address="%IX10.5">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EINS wenn Antrieb Korb in Nulllage</xhtml>
          </documentation>
        </variable>
        <variable name="bDoorClosed" address="%IX10.6">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EINS wenn Tuer geschlossen</xhtml>
          </documentation>
        </variable>
        <variable name="bNoozleFrameHomed" address="%IX10.7">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">EINS wenn Antrieb Duesen in Nulllage</xhtml>
          </documentation>
        </variable>
        <variable name="bInletAirShutOffValveOpen" address="%IX11.1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL und Zuluftklappe EIN - Verzoegerung 5 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bInletAirShutOffValveClosed" address="%IX11.2">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL und Zuluftklappe AUS - Verzoegerung 5 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bAirSupplyTempSensorOk" address="%IX11.3">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 1 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bAirSupplyFlowOk" address="%IX11.4">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL und Zuluftgeblaese EIN - Verzogerung 20 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bDemineralOk" address="%IX11.7">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL und Frischwasser EIN - Verzogerung 5 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bEmergencyStopOk" address="%IX0.0">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 0 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bMotorsDrivesOk" address="%IX0.3">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 0 sec</xhtml>
          </documentation>
        </variable>
        <variable name="bConditionToStartOk" address="%IX0.4">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 0 sec (Quittierung Nothalt drücken, damit ok)</xhtml>
          </documentation>
        </variable>
        <variable name="bDoorLoadingSafetyOk" address="%IX0.6">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Meldung, Stoerung wenn NULL - Verzoegerung 0 sec</xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4a91e9eb-c770-48e3-b450-ea0f18ed6759</ObjectId>
          </data>
        </addData>
        <documentation>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">-----Variablen die die Maschine an die Steuerung meldet---</xhtml>
        </documentation>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
      <Interface name="ITF_ActorContinous" ObjectId="246c8532-c822-40c6-9621-047e42842d68">
        <Methods>
          <Method name="SetSetPointLimits" ObjectId="3bff9f29-3ad6-4ac1-b4eb-665653054d20">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
            </interface>
            <addData />
          </Method>
        </Methods>
        <addData />
      </Interface>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
      <Interface name="ITF_System" ObjectId="b6679aa9-af7d-44b6-a5ab-6599c873b88b">
        <Methods>
          <Method name="RampDown" ObjectId="4b98c06e-2a3b-402d-a8ac-247edd5c98bc">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
              <outputVars>
                <variable name="bRampDownFinished">
                  <type>
                    <BOOL />
                  </type>
                  <initialValue>
                    <simpleValue value="FALSE" />
                  </initialValue>
                </variable>
              </outputVars>
            </interface>
            <addData />
          </Method>
          <Method name="Operational" ObjectId="8bb23ddb-4fb0-42b0-8f41-8619d21e98d6">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
              <outputVars>
                <variable name="bSwitchToWorking">
                  <type>
                    <BOOL />
                  </type>
                  <initialValue>
                    <simpleValue value="FALSE" />
                  </initialValue>
                </variable>
              </outputVars>
            </interface>
            <addData />
          </Method>
          <Method name="CheckError" ObjectId="8a8bc92e-853e-4d86-b50b-7117c03b8539">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
              <outputVars>
                <variable name="bError">
                  <type>
                    <BOOL />
                  </type>
                </variable>
              </outputVars>
            </interface>
            <addData />
          </Method>
          <Method name="Working" ObjectId="2b54d2e7-ccd5-4b69-b2f9-b2f9fe47149a">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
              <outputVars>
                <variable name="bSwitchToOperational">
                  <type>
                    <BOOL />
                  </type>
                  <initialValue>
                    <simpleValue value="FALSE" />
                  </initialValue>
                </variable>
              </outputVars>
            </interface>
            <addData />
          </Method>
          <Method name="RampUp" ObjectId="fd59819b-43c5-48cc-98af-bb739bafe907">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
              <outputVars>
                <variable name="bRampUpFinished">
                  <type>
                    <BOOL />
                  </type>
                  <initialValue>
                    <simpleValue value="FALSE" />
                  </initialValue>
                </variable>
              </outputVars>
            </interface>
            <addData />
          </Method>
          <Method name="Standby" ObjectId="139c71f4-133c-4956-b9b6-c15d8c730076">
            <interface>
              <returnType>
                <BOOL />
              </returnType>
            </interface>
            <addData />
          </Method>
        </Methods>
        <addData />
      </Interface>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="POUs">
          <Folder Name="03_Systems">
            <Object Name="FB_TankSystem" ObjectId="958bf47a-7bcb-4976-be51-b08c5273ea83">
              <Object Name="ReadInputs" ObjectId="24c6df26-624b-4a9c-bac0-b7316946e6af" />
              <Object Name="SetOutputs" ObjectId="350ded10-08ad-481f-80df-d63d34efaf72" />
              <Object Name="CheckError" ObjectId="cb79b8cf-9bb8-4ddb-b405-29ad32eac043" />
              <Object Name="RampUp" ObjectId="d96f4c90-d947-4a94-835a-214083734679" />
              <Object Name="OilSeparation" ObjectId="4c666ef1-d5a7-40b7-ab7d-6ad6b383d6e2" />
              <Object Name="CtrlTankHeater" ObjectId="ed662f75-8781-4c4a-8ad5-0ceeb4fd56dd" />
              <Object Name="Working" ObjectId="1172bdf3-9259-4d40-bc1c-3e3bb9210277" />
              <Object Name="SetSetPointLimits" ObjectId="fe8a7f25-f7d4-41e5-93ec-f671b6cafa07" />
              <Object Name="SetStates" ObjectId="03d9dfa2-b793-4413-accc-3711f02dfd67" />
              <Object Name="CheckAlgorithmPermission" ObjectId="a37f548c-d691-4513-8890-d7ec7177b2f6" />
              <Object Name="Standby" ObjectId="73cf30e1-6566-4a0b-a59a-b2f5ad779a18" />
            </Object>
            <Object Name="FB_KEASystem" ObjectId="65eafd7c-523e-4dbc-b511-a1acca9b11b6">
              <Object Name="StartButtonEdgeDetection" ObjectId="e5672546-1779-4c1d-b3da-053d78a8cef5" />
              <Object Name="ReadInputs" ObjectId="375d2af6-ce8f-4e06-a91f-bde8e7aca430" />
              <Object Name="Standby" ObjectId="44749baa-1c8d-4978-984a-58fa45d7df4c" />
              <Object Name="SprayCleaning" ObjectId="fc08ba5e-83af-4aaa-aca8-9b0482c8d93e" />
              <Object Name="Dripping" ObjectId="7e70a761-6693-4446-9b6b-483fcd9f73d5" />
              <Object Name="Suction" ObjectId="2a839280-ea41-4181-9c16-b7b59e276f61" />
              <Object Name="Blowing" ObjectId="623ef555-8664-4507-a023-431a89ce5642" />
              <Object Name="ConvectionDrying" ObjectId="e746ce1b-a8a3-44b3-b188-f239bb6676c8" />
              <Object Name="Homing" ObjectId="f7d99f97-bda4-45ca-9ef9-bab5ded3fe78" />
              <Object Name="SystemFlowControl" ObjectId="19e8acb4-f8ca-43b1-b197-057ea5b73212" />
              <Object Name="CheckError" ObjectId="36d3165b-ff78-4ef6-9c79-f48d6fd6e465" />
              <Object Name="RampUp" ObjectId="12c31a46-4515-4ee1-87cf-dda7e2722c82" />
              <Object Name="Operational" ObjectId="615e2e91-ad80-4328-b351-bbd88ce158cb" />
              <Object Name="SelectProgram" ObjectId="78687eee-e41e-4680-b483-892693c0e5b2" />
              <Object Name="SetStates" ObjectId="7f5463a6-6517-4b4d-8b8e-248669273ffa" />
              <Object Name="TimeToNextInterruption" ObjectId="542bf08f-35cd-4d0e-beea-fc34967db003" />
            </Object>
            <Object Name="FB_InletAirHeatingSystem" ObjectId="e26f411d-315a-4ff7-ae6a-6684407a01b9">
              <Object Name="SetOutputs" ObjectId="dccab24f-c021-4397-a9e6-2801fbdcf97b" />
              <Object Name="ReadInputs" ObjectId="0d5075bc-9f54-4640-b8cc-2298fe21e402" />
              <Object Name="SetSetPointLimits" ObjectId="663ad436-8072-4027-a2c6-d865489606d9" />
              <Object Name="CheckError" ObjectId="64dea345-640b-46dd-aca2-10a4a4d4a9e7" />
              <Object Name="RampDown" ObjectId="b710e724-4a82-4f0a-a781-d043734a91a0" />
              <Object Name="RampUp" ObjectId="0ebe378d-3902-4f8d-8412-07234300eccf" />
              <Object Name="Working" ObjectId="f1385d70-4aed-446f-a7dc-6f4bdc585089" />
              <Object Name="SetStates" ObjectId="4302151a-07be-4b35-aad9-518dacd73821" />
              <Object Name="Standby" ObjectId="8620aaef-6d67-4ba8-8db4-51fdcc62f700" />
            </Object>
            <Object Name="FB_CleaningChamberSystem" ObjectId="8ea84711-af10-4bb8-8e38-5e6c4d78f9d3">
              <Object Name="CtrlBlastNoozles" ObjectId="e16c094a-e35b-43db-8c31-5bce0941decf" />
              <Object Name="CheckError" ObjectId="56cf6b1d-208d-4ad8-9deb-c817399732a5" />
              <Object Name="OpenDoor" ObjectId="0b4e1e55-5a41-4c72-af7d-2f68744f3831" />
              <Object Name="ExhaustFanIfDoorOpen" ObjectId="9d413a32-629b-4afc-8b6b-b5a71ecf16fb" />
              <Object Name="SetStates" ObjectId="f4596b15-8632-42ba-82a1-5c3b28ae5942" />
              <Object Name="ReadInputs" ObjectId="35d6d73c-0589-4ff4-92ff-c8283803087a" />
              <Object Name="SetOutputs" ObjectId="2fb7a947-8a2b-4814-b393-ff0621252bdf" />
            </Object>
          </Folder>
          <Folder Name="05_Communication">
            <Folder Name="AnalogModuls">
              <Object Name="PRG_AnalogInputs" ObjectId="b4d27cf5-1ebc-4473-b645-be38e3ea7334" />
              <Object Name="PRG_AnalogOutputs" ObjectId="e80cb33d-c3c0-469e-bc3f-20cba888a9de" />
            </Folder>
            <Folder Name="PowerMeasurement">
              <Object Name="prPowerMeasurementUMG" ObjectId="c4df5764-e460-47b1-a7bc-4b7e35df084d" />
            </Folder>
          </Folder>
          <Folder Name="00_Base_Classes">
            <Object Name="FB_Actor2Point" ObjectId="779c39b8-c120-47da-8edf-760811555f3b">
              <Object Name="SelectControlMode" ObjectId="3e578076-f21b-4cb6-b8d9-37cde3c10288" />
              <Object Name="bStatusOn" ObjectId="fe20e69e-429c-460d-922a-3a74b2152010" />
            </Object>
            <Object Name="FB_ActorContinous" ObjectId="bf14fbd8-524a-425b-a06d-fcbc597c9b1f">
              <Object Name="SelectControlMode" ObjectId="9487b088-9bc5-4a7e-8bf7-9767eafe3f05" />
              <Object Name="SetPointCheck" ObjectId="a788f595-bc97-42ed-a5e1-110d1f06de83" />
              <Object Name="MAIN" ObjectId="275add3d-01ef-4c7d-82e9-9c61ce55000f" />
              <Object Name="SetSetPointLimits" ObjectId="20ea23c7-31e4-4be6-923e-99efd0fbf44c" />
            </Object>
            <Object Name="FB_Sensor" ObjectId="cd98d21b-bf68-4425-904d-46eec50867b1" />
            <Object Name="FB_SystemContinous" ObjectId="997f558e-7533-4f7d-83f7-91e1632805dd">
              <Object Name="MAIN" ObjectId="0f6296ee-45f5-4e45-b70e-a6b0f33b8461" />
              <Object Name="SystemFlowControl" ObjectId="6217cbf4-0afa-43b2-8f55-e14926bb4551" />
              <Object Name="SetSetPointLimits" ObjectId="c9b7018e-3d3b-4300-a0ff-a7594c0a9418" />
              <Object Name="CheckError" ObjectId="0b9322cf-e70a-4690-99c5-93a49a2aa482" />
              <Object Name="Operational" ObjectId="b67d22fb-b8a1-4acb-81b9-dca13c100aa8" />
              <Object Name="RampDown" ObjectId="89229a8c-6f58-44ae-b9f0-81b09c033393" />
              <Object Name="RampUp" ObjectId="d9924ef1-5ccd-4d86-9b3d-d3f147fbce70" />
              <Object Name="Working" ObjectId="47a9a748-1dfd-446c-ada1-d5234d717177" />
              <Object Name="Standby" ObjectId="0a54e910-0d7e-4490-ba5b-d25d949d0b58" />
            </Object>
            <Object Name="ITF_ActorContinous" ObjectId="246c8532-c822-40c6-9621-047e42842d68">
              <Object Name="SetSetPointLimits" ObjectId="3bff9f29-3ad6-4ac1-b4eb-665653054d20" />
            </Object>
            <Object Name="ITF_System" ObjectId="b6679aa9-af7d-44b6-a5ab-6599c873b88b">
              <Object Name="RampDown" ObjectId="4b98c06e-2a3b-402d-a8ac-247edd5c98bc" />
              <Object Name="Operational" ObjectId="8bb23ddb-4fb0-42b0-8f41-8619d21e98d6" />
              <Object Name="CheckError" ObjectId="8a8bc92e-853e-4d86-b50b-7117c03b8539" />
              <Object Name="Working" ObjectId="2b54d2e7-ccd5-4b69-b2f9-b2f9fe47149a" />
              <Object Name="RampUp" ObjectId="fd59819b-43c5-48cc-98af-bb739bafe907" />
              <Object Name="Standby" ObjectId="139c71f4-133c-4956-b9b6-c15d8c730076" />
            </Object>
            <Object Name="FB_System2Point" ObjectId="c0351a81-0a1b-4a59-9278-4d72daf11bc8">
              <Object Name="RampDown" ObjectId="20bc3486-a275-474c-9da9-e5dde4878b93" />
              <Object Name="Operational" ObjectId="40f52629-7661-4750-85af-bd0dccba9b5e" />
              <Object Name="CheckError" ObjectId="6ba55b69-52b6-485f-b1ae-be8703bd3738" />
              <Object Name="Working" ObjectId="109d1e22-3004-4bdd-bd0e-bab2c2441a5f" />
              <Object Name="RampUp" ObjectId="a76810a1-1a19-4f6f-aceb-27c6ebd774f8" />
              <Object Name="MAIN" ObjectId="fbd33b7a-76f7-485f-8f95-be2eb8ca4cd1" />
              <Object Name="SystemFlowControl" ObjectId="a99f9330-87c6-4dd3-b369-bbe3c0f2de7b" />
              <Object Name="Standby" ObjectId="c81ebc94-a01b-4121-8298-c67697513439" />
            </Object>
          </Folder>
        </Folder>
        <Folder Name="Global IO Variables">
          <Object Name="outputs" ObjectId="d5aea26c-4a07-4dcb-bc54-4dfc0e8b9c1e" />
          <Object Name="inputs" ObjectId="4a91e9eb-c770-48e3-b450-ea0f18ed6759" />
        </Folder>
        <Object Name="Plc_Main" ObjectId="ac84cc45-b99f-4718-8948-41c8abf9eee4" />
        <Folder Name="DUTs">
          <Folder Name="3_KEAGlobal_Data_Structs">
            <Object Name="ST_ComBasketRotation" ObjectId="d1a410be-9c79-4d50-a7b7-45a98dd5a482" />
            <Object Name="ST_PowerMeasurementUMG96RM" ObjectId="bd050c9d-0cc3-43d9-a449-929d2337d967" />
            <Object Name="ST_SetKEAProgramManual" ObjectId="faa9a5a1-00f8-4f90-9ce7-bff828719f94" />
            <Object Name="ST_KEALocalSetParameters" ObjectId="698900de-5a74-42cc-8b14-3579abc89752" />
            <Object Name="ST_KEADefaultParameters" ObjectId="f390229f-c7ca-451c-89c6-743db9036dc2" />
            <Object Name="E_KEAOperatingState" ObjectId="c97a5cc6-33df-46bb-82a8-83c6f1364c6d" />
            <Object Name="ST_KEAProgramState" ObjectId="882a4f4a-ed89-4783-a9fe-a0860fbb9c34" />
            <Object Name="ST_KEAState" ObjectId="d824d202-8f52-4c0d-8119-ef9dd7c155c7" />
            <Object Name="ST_KEAErrorState" ObjectId="d8572952-e802-4d58-a52a-10486a411a38" />
          </Folder>
          <Folder Name="2_KEASystems_Data_Structs">
            <Object Name="ST_TankErrorState" ObjectId="96979f1c-5e51-40f5-b56d-fadc74da005b" />
            <Object Name="ST_CleaningChamberState" ObjectId="d136fb48-fd86-410c-8ad4-9fdf88341073" />
            <Object Name="ST_InletAirHeatingErrorState" ObjectId="ac6adde2-125d-44ff-9697-de1cb6c4c842" />
            <Object Name="ST_TempSensorState" ObjectId="0dd2f2dd-3192-44f9-a91e-601be5e75ca3" />
            <Object Name="ST_TankState" ObjectId="b5dd73dd-cf55-451e-bc48-616c124ba432" />
            <Object Name="ST_InletAirHeatingState" ObjectId="d8ea070e-03b5-4086-a656-4b9ba4d2d655" />
            <Object Name="ST_CleaningChamberErrorState" ObjectId="0203f354-c709-427d-83bf-d94dde6114eb" />
          </Folder>
          <Folder Name="1_DR_Data_Structs">
            <Object Name="ST_StoreEnergyInherentlyState" ObjectId="fccdfa4d-f8c9-45ad-b6f3-9b950a4db300" />
            <Object Name="ST_InterruptProcessState" ObjectId="6f74adb5-4708-4426-88eb-a15030125d05" />
            <Object Name="ST_StepPowerConsumption" ObjectId="5c96aef4-390f-456c-a03b-af3101b08b3b" />
            <Object Name="ST_StepDuration" ObjectId="a18e64c9-336a-4c3b-85b0-3f48b6825697" />
          </Folder>
          <Folder Name="0_Base_Data_Structs">
            <Object Name="E_SystemControlState" ObjectId="9817809b-cf85-46c9-ae1f-a83f65c089ae" />
            <Object Name="E_SystemOperatingState" ObjectId="3ae62665-110e-4839-b666-82d251e02aac" />
            <Object Name="ST_Control" ObjectId="40e53a86-8401-4ed8-b8d6-786a48036178" />
            <Object Name="ST_ControlState" ObjectId="65125475-c668-47ed-8c3b-4d8abf97b67a" />
            <Object Name="ST_SensorState" ObjectId="2975f68f-a189-46c5-b8f3-10203fb5a404" />
            <Object Name="ST_SetPointState" ObjectId="a8ea9f16-1a3b-41a0-9776-e9b4f11e9876" />
            <Object Name="ST_SetSetPoint" ObjectId="bc9d9154-e319-49de-a744-1380eb17eb3f" />
            <Object Name="ST_SystemState" ObjectId="e9d0f5d3-d47e-485c-a637-88ed8eb03f8a" />
          </Folder>
        </Folder>
      </ProjectStructure>
    </data>
  </addData>
</project>